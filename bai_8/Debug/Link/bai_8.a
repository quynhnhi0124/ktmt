;/*
; * bai_8.c
; *
; * Created: 13-Nov-20 9:25:44 AM
; * Author: QuynhNhi
; */
;#include <alcd.h>
;#include <stdint.h>
;#include <stdlib.h>
;#include <stdio.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <font5x7.h>
;#include <io.h>
;
;#define DHT_ER 0
;#define DHT_OK  1
;
;#define BL PORTD.7
;#define DHT_DATA_IN PINB.7
;#define DHT_DATA_OUT PORTB.7
;#define DHT_DDR_DATA DDRB.7
;
;char data[16];
;unsigned char dht_nhiet_do, dht_do_am;
;
;unsigned char DHT_GetTemHumi(unsigned char *tem, unsigned char *humi){
; 0000 001A unsigned char DHT_GetTemHumi(unsigned char *tem, unsigned char *humi){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001B     unsigned char buffer[5] = {0,0,0,0,0};
; 0000 001C     unsigned char ii,i,checksum;
; 0000 001D 
; 0000 001E     DHT_DDR_DATA = 1; //set la cong ra
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;	*tem -> Y+11
;	*humi -> Y+9
;	buffer -> Y+4
;	ii -> R17
;	i -> R16
;	checksum -> R19
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001F     DHT_DATA_OUT = 1;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0020     delay_us(40);
;PCODE: $00000020 VOL: 0
; 0000 0021     DHT_DATA_OUT = 0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0022     delay_ms(30);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0023     DHT_DATA_OUT = 1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0024     DHT_DDR_DATA = 0; //set la loi vao
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0025     delay_us(40);
;PCODE: $0000002A VOL: 0
; 0000 0026     if(DHT_DATA_IN){
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0027         return DHT_ER;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0028     }
; 0000 0029     else while(!(DHT_DATA_IN));
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002A     delay_us(40);
;PCODE: $0000003A VOL: 0
; 0000 002B     if(!DHT_DATA_IN){
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002C         return DHT_ER;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002D     }
; 0000 002E     else while((DHT_DATA_IN));
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002F     //bat dau doc du lieu
; 0000 0030     for(i=0;i<5;i++){
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0031         for(ii=0;ii<8;ii++){
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0032             while ((!DHT_DATA_IN)); //doi data len 1
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0033             delay_us(30);
;PCODE: $00000062 VOL: 0
; 0000 0034             if(DHT_DATA_IN){
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0035                 buffer[i] |=(1<<(7-ii)); //lay7 bit
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0036                 while ((DHT_DATA_IN)); //doi data xuong
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0037             }
; 0000 0038         }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0039     }
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 003A     //tinh toan checksum
; 0000 003B     checksum = buffer[0] + buffer[1] + buffer[2] + buffer[3];
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 003C     //kiem tra checksum
; 0000 003D     if((checksum) != buffer[4]){
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 003E         return DHT_ER;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 003F     }
; 0000 0040     //lay du lieu
; 0000 0041     *tem = buffer[2];
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0042     *humi = buffer[0];
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0043     return DHT_OK;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0044 
; 0000 0045 
; 0000 0046 
; 0000 0047 }
;PCODE: $0000009E VOL: 0
;
;void main(void)
; 0000 004A {
;PCODE: $0000009F VOL: 0
; 0000 004B lcd_init(16);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 004C lcd_clear();
;PCODE: $000000A2 VOL: 0
; 0000 004D lcd_gotoxy(0,0);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 004E 
; 0000 004F DDRD = 0x80;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0050 PORTD = 0x80;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0051 
; 0000 0052 while (1)
;PCODE: $000000AB VOL: 0
; 0000 0053     {
; 0000 0054     // Please write your application code here
; 0000 0055     if(DHT_GetTemHumi(&dht_nhiet_do, &dht_do_am)){
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0056         lcd_clear();
;PCODE: $000000B2 VOL: 0
; 0000 0057         lcd_gotoxy(0,0);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0058         sprintf(data, "Do am %u", (uint8_t)dht_do_am);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0059         lcd_puts(data);
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 005A         lcd_gotoxy(0,1);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 005B         sprintf(data,"Nhiet do %u", (uint8_t)dht_nhiet_do);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 005C         lcd_puts(data);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 005D         delay_ms(300);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 005E     }
; 0000 005F     }
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0060 }
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
