
AVRASM ver. 2.1.30  C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm Fri Nov 06 10:49:24 2020

C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1090): warning: Register r4 already defined by the .DEF directive
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1091): warning: Register r5 already defined by the .DEF directive
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1092): warning: Register r6 already defined by the .DEF directive
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1093): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _gia_tri_adc=R4
                 	.DEF _gia_tri_adc_msb=R5
                 	.DEF _i=R6
                 	.DEF _i_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0157 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 0400
00004c 040a
00004d 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1202): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000      	.DB  0x0,0x0
                 
                 _0x0:
000147 6425
000148 2020
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1214): warning: .cseg .db misalignment - padding zero byte
000149 0000      	.DB  0x25,0x64,0x20,0x20,0x0
                 _0x2100060:
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1216): warning: .cseg .db misalignment - padding zero byte
00014a 0001      	.DB  0x1
                 _0x2100000:
00014b 4e2d
00014c 4e41
00014d 4900
00014e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\BVCN 88\OneDrive\Máy tính\KTMT\bai_6\Debug\List\bai_6.asm(1219): warning: .cseg .db misalignment - padding zero byte
00014f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000150 0002      	.DW  0x02
000151 0006      	.DW  0x06
000152 028c      	.DW  __REG_VARS*2
                 
000153 0001      	.DW  0x01
000154 0721      	.DW  __seed_G108
000155 0294      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
000156 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000157 94f8      	CLI
000158 27ee      	CLR  R30
000159 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00015a e0f1      	LDI  R31,1
00015b bff5      	OUT  MCUCR,R31
00015c bfe5      	OUT  MCUCR,R30
00015d 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00015f e08d      	LDI  R24,(14-2)+1
000160 e0a2      	LDI  R26,2
000161 27bb      	CLR  R27
                 __CLEAR_REG:
000162 93ed      	ST   X+,R30
000163 958a      	DEC  R24
000164 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000165 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000166 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000167 e0a0      	LDI  R26,LOW(__SRAM_START)
000168 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000169 93ed      	ST   X+,R30
00016a 9701      	SBIW R24,1
00016b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00016c eae0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00016d e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00016e 9185      	LPM  R24,Z+
00016f 9195      	LPM  R25,Z+
000170 9700      	SBIW R24,0
000171 f061      	BREQ __GLOBAL_INI_END
000172 91a5      	LPM  R26,Z+
000173 91b5      	LPM  R27,Z+
000174 9005      	LPM  R0,Z+
000175 9015      	LPM  R1,Z+
000176 01bf      	MOVW R22,R30
000177 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000178 9005      	LPM  R0,Z+
000179 920d      	ST   X+,R0
00017a 9701      	SBIW R24,1
00017b f7e1      	BRNE __GLOBAL_INI_LOOP
00017c 01fb      	MOVW R30,R22
00017d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00017e bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00017f efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000180 bfed      	OUT  SPL,R30
000181 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000182 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000183 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000184 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000185 940c 0194 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai_6.c
                 ; *
                 ; * Created: 30-Oct-20 9:22:34 AM
                 ; * Author: QuynhNhi
                 ; * Viet chuong trinh hien thi dong chu hello world len glcd
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <glcd.h>
                 ;#include <delay.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#define LED_G PORTD.5
                 ;unsigned int gia_tri_adc;
                 ;unsigned char buffer[10];
                 ;unsigned int i = 0;
                 ;
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0018 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0019 ADMUX=adc_input | ADC_VREF_TYPE;
000187 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000188 81e8      	LD   R30,Y
000189 b9e7      	OUT  0x7,R30
                 ; 0000 001A // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 001B delay_us(10);
                +
00018a e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00018b 958a     +DEC R24
00018c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 001C // Start the AD conversion
                 ; 0000 001D ADCSRA|=(1<<ADSC);
00018d 9a36      	SBI  0x6,6
                 ; 0000 001E // Wait for the AD conversion to complete
                 ; 0000 001F while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00018e 9b34      	SBIS 0x6,4
00018f cffe      	RJMP _0x3
                 ; 0000 0020 ADCSRA|=(1<<ADIF);
000190 9a34      	SBI  0x6,4
                 ; 0000 0021 return ADCW;
000191 b1e4      	IN   R30,0x4
000192 b1f5      	IN   R31,0x4+1
000193 c16c      	RJMP _0x212000A
                 ; 0000 0022 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0025 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0026 GLCDINIT_t glcd_init_data;
                 ; 0000 0027 glcd_init_data.font = font5x7;
000194 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000195 e8ec      	LDI  R30,LOW(_font5x7*2)
000196 e0f0      	LDI  R31,HIGH(_font5x7*2)
000197 83e8      	ST   Y,R30
000198 83f9      	STD  Y+1,R31
                 ; 0000 0028 glcd_init_data.temp_coef = 90;   //so nay thay doi duoc
000199 81ee      	LDD  R30,Y+6
00019a 7fec      	ANDI R30,LOW(0xFC)
00019b 60e2      	ORI  R30,2
00019c 83ee      	STD  Y+6,R30
                 ; 0000 0029 glcd_init_data.bias = 4;   //thay doi so
00019d 7ee3      	ANDI R30,LOW(0xE3)
00019e 61e0      	ORI  R30,0x10
00019f 83ee      	STD  Y+6,R30
                 ; 0000 002A glcd_init_data.vlcd = 60;  //thay doi
0001a0 81ef      	LDD  R30,Y+7
0001a1 78e0      	ANDI R30,LOW(0x80)
0001a2 63ec      	ORI  R30,LOW(0x3C)
0001a3 83ef      	STD  Y+7,R30
                 ; 0000 002B glcd_init(&glcd_init_data);
0001a4 01de      	MOVW R26,R28
0001a5 d0b5      	RCALL _glcd_init
                 ; 0000 002C PORTD.7 = 1;
0001a6 9a97      	SBI  0x12,7
                 ; 0000 002D ADMUX=ADC_VREF_TYPE;
0001a7 e0e0      	LDI  R30,LOW(0)
0001a8 b9e7      	OUT  0x7,R30
                 ; 0000 002E ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0001a9 e8e3      	LDI  R30,LOW(131)
0001aa b9e6      	OUT  0x6,R30
                 ; 0000 002F SFIOR=(0<<ACME);
0001ab e0e0      	LDI  R30,LOW(0)
0001ac bde0      	OUT  0x20,R30
                 ; 0000 0030 //DDRD = 0x20;
                 ; 0000 0031 DDRD = 0xA0;
0001ad eae0      	LDI  R30,LOW(160)
0001ae bbe1      	OUT  0x11,R30
                 ; 0000 0032 PORTD = 0x00;
0001af e0e0      	LDI  R30,LOW(0)
0001b0 bbe2      	OUT  0x12,R30
                 ; 0000 0033 PORTD.7 = 0;
0001b1 9897      	CBI  0x12,7
                 ; 0000 0034 while (1)
                 _0xA:
                 ; 0000 0035     {
                 ; 0000 0036     // Please write your application code here
                 ; 0000 0037         /*glcd_moveto(0,0);
                 ; 0000 0038         glcd_outtext("hello world");   */
                 ; 0000 0039         for(i = 0; i<4; i++){
0001b2 2466      	CLR  R6
0001b3 2477      	CLR  R7
                 _0xE:
0001b4 e0e4      	LDI  R30,LOW(4)
0001b5 e0f0      	LDI  R31,HIGH(4)
0001b6 166e      	CP   R6,R30
0001b7 067f      	CPC  R7,R31
0001b8 f4f8      	BRSH _0xF
                 ; 0000 003A             gia_tri_adc = read_adc(0);
0001b9 e0a0      	LDI  R26,LOW(0)
0001ba dfcc      	RCALL _read_adc
0001bb 012f      	MOVW R4,R30
                 ; 0000 003B             sprintf(buffer, "%d  ", gia_tri_adc);
0001bc e1ed      	LDI  R30,LOW(_buffer)
0001bd e0f5      	LDI  R31,HIGH(_buffer)
0001be 93fa      	ST   -Y,R31
0001bf 93ea      	ST   -Y,R30
                +
0001c0 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001c1 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001c2 93fa      	ST   -Y,R31
0001c3 93ea      	ST   -Y,R30
0001c4 01f2      	MOVW R30,R4
0001c5 2766      	CLR  R22
0001c6 2777      	CLR  R23
0001c7 940e 0983 	CALL __PUTPARD1
0001c9 e084      	LDI  R24,4
0001ca 940e 07dc 	CALL _sprintf
0001cc 9628      	ADIW R28,8
                 ; 0000 003C             glcd_outtextxy(10,10,buffer);
0001cd e0ea      	LDI  R30,LOW(10)
0001ce 93ea      	ST   -Y,R30
0001cf 93ea      	ST   -Y,R30
0001d0 e1ad      	LDI  R26,LOW(_buffer)
0001d1 e0b5      	LDI  R27,HIGH(_buffer)
0001d2 940e 0647 	CALL _glcd_outtextxy
                 ; 0000 003D         }
0001d4 01f3      	MOVW R30,R6
0001d5 9631      	ADIW R30,1
0001d6 013f      	MOVW R6,R30
0001d7 cfdc      	RJMP _0xE
                 _0xF:
                 ; 0000 003E         /*gia_tri_adc = read_adc(0);
                 ; 0000 003F         sprintf(buffer, "%d  ", gia_tri_adc);
                 ; 0000 0040         glcd_outtextxy(10,10,buffer);  */
                 ; 0000 0041         //delay_ms(250);
                 ; 0000 0042         if (gia_tri_adc <= 700){
0001d8 ebec      	LDI  R30,LOW(700)
0001d9 e0f2      	LDI  R31,HIGH(700)
0001da 15e4      	CP   R30,R4
0001db 05f5      	CPC  R31,R5
0001dc f010      	BRLO _0x10
                 ; 0000 0043             PORTD.5 = 1;
0001dd 9a95      	SBI  0x12,5
                 ; 0000 0044             }
                 ; 0000 0045         else
0001de c001      	RJMP _0x13
                 _0x10:
                 ; 0000 0046             PORTD.5 = 0;
0001df 9895      	CBI  0x12,5
                 ; 0000 0047     }
                 _0x13:
0001e0 cfd1      	RJMP _0xA
                 ; 0000 0048 }
                 _0x16:
0001e1 cfff      	RJMP _0x16
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0001e2 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0001e3 93aa      	ST   -Y,R26
0001e4 931a      	ST   -Y,R17
0001e5 91e0 0065 	LDS  R30,101
0001e7 7eef      	ANDI R30,0xEF
0001e8 93e0 0065 	STS  101,R30
0001ea e018      	LDI  R17,LOW(8)
                 _0x2000004:
0001eb dff6      	RCALL _pcd8544_delay_G100
0001ec 81e9      	LDD  R30,Y+1
0001ed 78e0      	ANDI R30,LOW(0x80)
0001ee f021      	BREQ _0x2000006
0001ef 91e0 0065 	LDS  R30,101
0001f1 60e2      	ORI  R30,2
0001f2 c003      	RJMP _0x20000A0
                 _0x2000006:
0001f3 91e0 0065 	LDS  R30,101
0001f5 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0001f6 93e0 0065 	STS  101,R30
0001f8 81e9      	LDD  R30,Y+1
0001f9 0fee      	LSL  R30
0001fa 83e9      	STD  Y+1,R30
0001fb dfe6      	RCALL _pcd8544_delay_G100
0001fc 91e0 0065 	LDS  R30,101
0001fe 60e4      	ORI  R30,4
0001ff 93e0 0065 	STS  101,R30
000201 dfe0      	RCALL _pcd8544_delay_G100
000202 91e0 0065 	LDS  R30,101
000204 7feb      	ANDI R30,0xFB
000205 93e0 0065 	STS  101,R30
000207 5011      	SUBI R17,LOW(1)
000208 f711      	BRNE _0x2000004
000209 91e0 0065 	LDS  R30,101
00020b 61e0      	ORI  R30,0x10
00020c 93e0 0065 	STS  101,R30
00020e 8118      	LDD  R17,Y+0
00020f c042      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000210 93aa      	ST   -Y,R26
000211 91e0 0065 	LDS  R30,101
000213 7fee      	ANDI R30,0xFE
000214 93e0 0065 	STS  101,R30
000216 81a8      	LD   R26,Y
000217 dfcb      	RCALL _pcd8544_wrbus_G100
000218 c0e7      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000219 93aa      	ST   -Y,R26
00021a 91e0 0065 	LDS  R30,101
00021c 60e1      	ORI  R30,1
00021d 93e0 0065 	STS  101,R30
00021f 81a8      	LD   R26,Y
000220 dfc2      	RCALL _pcd8544_wrbus_G100
000221 c0de      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000222 93aa      	ST   -Y,R26
000223 931a      	ST   -Y,R17
000224 81e9      	LDD  R30,Y+1
000225 95e6      	LSR  R30
000226 95e6      	LSR  R30
000227 95e6      	LSR  R30
000228 2f1e      	MOV  R17,R30
000229 e5e4      	LDI  R30,LOW(84)
00022a 9fe1      	MUL  R30,R17
00022b 01f0      	MOVW R30,R0
00022c 01df      	MOVW R26,R30
00022d 81ea      	LDD  R30,Y+2
00022e e0f0      	LDI  R31,0
00022f 0fea      	ADD  R30,R26
000230 1ffb      	ADC  R31,R27
000231 93e0 0527 	STS  _gfx_addr_G100,R30
000233 93f0 0528 	STS  _gfx_addr_G100+1,R31
000235 2fe1      	MOV  R30,R17
000236 8118      	LDD  R17,Y+0
000237 9623      	ADIW R28,3
000238 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000239 93aa      	ST   -Y,R26
00023a 81e9      	LDD  R30,Y+1
00023b 68e0      	ORI  R30,0x80
00023c 2fae      	MOV  R26,R30
00023d dfd2      	RCALL _pcd8544_wrcmd
00023e 81e9      	LDD  R30,Y+1
00023f 93ea      	ST   -Y,R30
000240 81a9      	LDD  R26,Y+1
000241 dfe0      	RCALL _pcd8544_setaddr_G100
000242 64e0      	ORI  R30,0x40
000243 2fae      	MOV  R26,R30
000244 dfcb      	RCALL _pcd8544_wrcmd
000245 c00c      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000246 93aa      	ST   -Y,R26
000247 81e9      	LDD  R30,Y+1
000248 93ea      	ST   -Y,R30
000249 81a9      	LDD  R26,Y+1
00024a dfee      	RCALL _pcd8544_gotoxy
00024b 91e0 0527 	LDS  R30,_gfx_addr_G100
00024d 91f0 0528 	LDS  R31,_gfx_addr_G100+1
00024f 5de7      	SUBI R30,LOW(-_gfx_buffer_G100)
000250 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000251 81e0      	LD   R30,Z
                 _0x212000B:
000252 9622      	ADIW R28,2
000253 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000254 93aa      	ST   -Y,R26
000255 940e 08aa 	CALL SUBOPT_0x0
000257 81a8      	LD   R26,Y
000258 83a0      	STD  Z+0,R26
000259 dfbf      	RCALL _pcd8544_wrdata_G100
00025a c0a5      	RJMP _0x212000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00025b 93ba      	ST   -Y,R27
00025c 93aa      	ST   -Y,R26
00025d 940e 09ab 	CALL __SAVELOCR4
00025f 91e0 0064 	LDS  R30,100
000261 61e0      	ORI  R30,0x10
000262 940e 08b5 	CALL SUBOPT_0x1
000264 61e0      	ORI  R30,0x10
000265 93e0 0065 	STS  101,R30
000267 91e0 0064 	LDS  R30,100
000269 60e4      	ORI  R30,4
00026a 940e 08b5 	CALL SUBOPT_0x1
00026c 7feb      	ANDI R30,0xFB
00026d 93e0 0065 	STS  101,R30
00026f 91e0 0064 	LDS  R30,100
000271 60e2      	ORI  R30,2
000272 93e0 0064 	STS  100,R30
000274 91e0 0064 	LDS  R30,100
000276 60e1      	ORI  R30,1
000277 93e0 0064 	STS  100,R30
000279 91e0 0064 	LDS  R30,100
00027b 60e8      	ORI  R30,8
00027c 940e 08b5 	CALL SUBOPT_0x1
00027e 7fe7      	ANDI R30,0XF7
00027f 93e0 0065 	STS  101,R30
000281 e0aa      	LDI  R26,LOW(10)
000282 e0b0      	LDI  R27,0
000283 940e 0951 	CALL _delay_ms
000285 91e0 0065 	LDS  R30,101
000287 60e8      	ORI  R30,8
000288 93e0 0065 	STS  101,R30
00028a 81ec      	LDD  R30,Y+4
00028b 81fd      	LDD  R31,Y+4+1
00028c 9730      	SBIW R30,0
00028d f121      	BREQ _0x2000008
00028e 81e6      	LDD  R30,Z+6
00028f 70e3      	ANDI R30,LOW(0x3)
000290 2f1e      	MOV  R17,R30
000291 81ec      	LDD  R30,Y+4
000292 81fd      	LDD  R31,Y+4+1
000293 81e6      	LDD  R30,Z+6
000294 95e6      	LSR  R30
000295 95e6      	LSR  R30
000296 70e7      	ANDI R30,LOW(0x7)
000297 2f0e      	MOV  R16,R30
000298 81ec      	LDD  R30,Y+4
000299 81fd      	LDD  R31,Y+4+1
00029a 81e7      	LDD  R30,Z+7
00029b 77ef      	ANDI R30,0x7F
00029c 2f3e      	MOV  R19,R30
00029d 81ac      	LDD  R26,Y+4
00029e 81bd      	LDD  R27,Y+4+1
00029f 940e 097b 	CALL __GETW1P
                +
0002a1 93e0 0504+STS _glcd_state + ( 4 ) , R30
0002a3 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0002a5 9612      	ADIW R26,2
0002a6 940e 097b 	CALL __GETW1P
                +
0002a8 93e0 0519+STS _glcd_state + ( 25 ) , R30
0002aa 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0002ac 81ac      	LDD  R26,Y+4
0002ad 81bd      	LDD  R27,Y+4+1
0002ae 9614      	ADIW R26,4
0002af 940e 097b 	CALL __GETW1P
0002b1 c00d      	RJMP _0x20000A1
                 _0x2000008:
0002b2 e010      	LDI  R17,LOW(0)
0002b3 e003      	LDI  R16,LOW(3)
0002b4 e332      	LDI  R19,LOW(50)
0002b5 e0e0      	LDI  R30,LOW(0)
0002b6 e0f0      	LDI  R31,HIGH(0)
                +
0002b7 93e0 0504+STS _glcd_state + ( 4 ) , R30
0002b9 93f0 0505+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0002bb 93e0 0519+STS _glcd_state + ( 25 ) , R30
0002bd 93f0 051a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0002bf 93e0 051b+STS _glcd_state + ( 27 ) , R30
0002c1 93f0 051c+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0002c3 e2a1      	LDI  R26,LOW(33)
0002c4 df4b      	RCALL _pcd8544_wrcmd
0002c5 2fe1      	MOV  R30,R17
0002c6 60e4      	ORI  R30,4
0002c7 2fae      	MOV  R26,R30
0002c8 df47      	RCALL _pcd8544_wrcmd
0002c9 2fe0      	MOV  R30,R16
0002ca 61e0      	ORI  R30,0x10
0002cb 2fae      	MOV  R26,R30
0002cc df43      	RCALL _pcd8544_wrcmd
0002cd 2fe3      	MOV  R30,R19
0002ce 68e0      	ORI  R30,0x80
0002cf 2fae      	MOV  R26,R30
0002d0 df3f      	RCALL _pcd8544_wrcmd
0002d1 e2a0      	LDI  R26,LOW(32)
0002d2 df3d      	RCALL _pcd8544_wrcmd
0002d3 e0a1      	LDI  R26,LOW(1)
0002d4 d022      	RCALL _glcd_display
0002d5 e0e1      	LDI  R30,LOW(1)
0002d6 93e0 0500 	STS  _glcd_state,R30
0002d8 e0e0      	LDI  R30,LOW(0)
                +
0002d9 93e0 0501+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0002db e0e1      	LDI  R30,LOW(1)
                +
0002dc 93e0 0506+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0002de 93e0 0507+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0002e0 93e0 0508+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0002e2 efef      	LDI  R30,LOW(255)
                +
0002e3 93e0 0509+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0002e5 e0e1      	LDI  R30,LOW(1)
                +
0002e6 93e0 0510+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0002e8 e1e1     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0002e9 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0002ea 93fa      	ST   -Y,R31
0002eb 93ea      	ST   -Y,R30
0002ec efef      	LDI  R30,LOW(255)
0002ed 93ea      	ST   -Y,R30
0002ee e0a8      	LDI  R26,LOW(8)
0002ef e0b0      	LDI  R27,0
0002f0 940e 0810 	CALL _memset
0002f2 d00f      	RCALL _glcd_clear
0002f3 e0e1      	LDI  R30,LOW(1)
0002f4 940e 09b2 	CALL __LOADLOCR4
0002f6 c060      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0002f7 93aa      	ST   -Y,R26
0002f8 81e8      	LD   R30,Y
0002f9 30e0      	CPI  R30,0
0002fa f011      	BREQ _0x200000A
0002fb e0ec      	LDI  R30,LOW(12)
0002fc c001      	RJMP _0x200000B
                 _0x200000A:
0002fd e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
0002fe 2fae      	MOV  R26,R30
0002ff df10      	RCALL _pcd8544_wrcmd
                 _0x212000A:
000300 9621      	ADIW R28,1
000301 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000302 940e 09ab 	CALL __SAVELOCR4
000304 e030      	LDI  R19,0
                +
000305 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000307 30e0      	CPI  R30,0
000308 f009      	BREQ _0x200000D
000309 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
00030a e0e0      	LDI  R30,LOW(0)
00030b 93ea      	ST   -Y,R30
00030c e0a0      	LDI  R26,LOW(0)
00030d df2b      	RCALL _pcd8544_gotoxy
                +
00030e ef08     +LDI R16 , LOW ( 504 )
00030f e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000310 01f8      	MOVW R30,R16
                +
000311 5001     +SUBI R16 , LOW ( 1 )
000312 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000313 9730      	SBIW R30,0
000314 f019      	BREQ _0x2000010
000315 2fa3      	MOV  R26,R19
000316 df3d      	RCALL _pcd8544_wrbyte
000317 cff8      	RJMP _0x200000E
                 _0x2000010:
000318 e0e0      	LDI  R30,LOW(0)
000319 93ea      	ST   -Y,R30
00031a e0a0      	LDI  R26,LOW(0)
00031b d340      	RCALL _glcd_moveto
00031c 940e 09b2 	CALL __LOADLOCR4
00031e 940c 08a8 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000320 93aa      	ST   -Y,R26
000321 931a      	ST   -Y,R17
000322 81ed      	LDD  R30,Y+5
000323 93ea      	ST   -Y,R30
000324 81ad      	LDD  R26,Y+5
000325 df20      	RCALL _pcd8544_rdbyte
000326 2f1e      	MOV  R17,R30
000327 81e9      	LDD  R30,Y+1
000328 30e7      	CPI  R30,LOW(0x7)
000329 f011      	BREQ _0x2000020
00032a 30e8      	CPI  R30,LOW(0x8)
00032b f439      	BRNE _0x2000021
                 _0x2000020:
00032c 81eb      	LDD  R30,Y+3
00032d 93ea      	ST   -Y,R30
00032e 81aa      	LDD  R26,Y+2
00032f 940e 0844 	CALL _glcd_mappixcolor1bit
000331 83eb      	STD  Y+3,R30
000332 c008      	RJMP _0x2000022
                 _0x2000021:
000333 30e3      	CPI  R30,LOW(0x3)
000334 f421      	BRNE _0x2000024
000335 81eb      	LDD  R30,Y+3
000336 95e0      	COM  R30
000337 83eb      	STD  Y+3,R30
000338 c002      	RJMP _0x2000025
                 _0x2000024:
000339 30e0      	CPI  R30,0
00033a f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
00033b 81ea      	LDD  R30,Y+2
00033c 95e0      	COM  R30
00033d 231e      	AND  R17,R30
00033e c002      	RJMP _0x2000027
                 _0x2000026:
00033f 30e2      	CPI  R30,LOW(0x2)
000340 f429      	BRNE _0x2000028
                 _0x2000027:
000341 81ea      	LDD  R30,Y+2
000342 81ab      	LDD  R26,Y+3
000343 23ea      	AND  R30,R26
000344 2b1e      	OR   R17,R30
000345 c00e      	RJMP _0x200001E
                 _0x2000028:
000346 30e1      	CPI  R30,LOW(0x1)
000347 f429      	BRNE _0x2000029
000348 81ea      	LDD  R30,Y+2
000349 81ab      	LDD  R26,Y+3
00034a 23ea      	AND  R30,R26
00034b 271e      	EOR  R17,R30
00034c c007      	RJMP _0x200001E
                 _0x2000029:
00034d 30e4      	CPI  R30,LOW(0x4)
00034e f429      	BRNE _0x200001E
00034f 81ea      	LDD  R30,Y+2
000350 95e0      	COM  R30
000351 81ab      	LDD  R26,Y+3
000352 2bea      	OR   R30,R26
000353 231e      	AND  R17,R30
                 _0x200001E:
000354 2fa1      	MOV  R26,R17
000355 defe      	RCALL _pcd8544_wrbyte
000356 8118      	LDD  R17,Y+0
                 _0x2120009:
000357 9626      	ADIW R28,6
000358 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000359 93aa      	ST   -Y,R26
00035a 9723      	SBIW R28,3
00035b 940e 09a9 	CALL __SAVELOCR6
00035d 89a8      	LDD  R26,Y+16
00035e 35a4      	CPI  R26,LOW(0x54)
00035f f448      	BRSH _0x200002C
000360 85af      	LDD  R26,Y+15
000361 33a0      	CPI  R26,LOW(0x30)
000362 f430      	BRSH _0x200002C
000363 85ae      	LDD  R26,Y+14
000364 30a0      	CPI  R26,LOW(0x0)
000365 f019      	BREQ _0x200002C
000366 85ad      	LDD  R26,Y+13
000367 30a0      	CPI  R26,LOW(0x0)
000368 f409      	BRNE _0x200002B
                 _0x200002C:
000369 c1cc      	RJMP _0x2120008
                 _0x200002B:
00036a 85ee      	LDD  R30,Y+14
00036b 87e8      	STD  Y+8,R30
00036c 89a8      	LDD  R26,Y+16
00036d 27bb      	CLR  R27
00036e 85ee      	LDD  R30,Y+14
00036f e0f0      	LDI  R31,0
000370 0fae      	ADD  R26,R30
000371 1fbf      	ADC  R27,R31
000372 35a5      	CPI  R26,LOW(0x55)
000373 e0e0      	LDI  R30,HIGH(0x55)
000374 07be      	CPC  R27,R30
000375 f020      	BRLO _0x200002E
000376 89a8      	LDD  R26,Y+16
000377 e5e4      	LDI  R30,LOW(84)
000378 1bea      	SUB  R30,R26
000379 87ee      	STD  Y+14,R30
                 _0x200002E:
00037a 852d      	LDD  R18,Y+13
00037b 85af      	LDD  R26,Y+15
00037c 27bb      	CLR  R27
00037d 85ed      	LDD  R30,Y+13
00037e e0f0      	LDI  R31,0
00037f 0fae      	ADD  R26,R30
000380 1fbf      	ADC  R27,R31
000381 97d1      	SBIW R26,49
000382 f020      	BRLO _0x200002F
000383 85af      	LDD  R26,Y+15
000384 e3e0      	LDI  R30,LOW(48)
000385 1bea      	SUB  R30,R26
000386 87ed      	STD  Y+13,R30
                 _0x200002F:
000387 85a9      	LDD  R26,Y+9
000388 30a6      	CPI  R26,LOW(0x6)
000389 f009      	BREQ PC+2
00038a c05b      	RJMP _0x2000030
00038b 85ec      	LDD  R30,Y+12
00038c 30e1      	CPI  R30,LOW(0x1)
00038d f409      	BRNE _0x2000034
00038e c1a7      	RJMP _0x2120008
                 _0x2000034:
00038f 30e3      	CPI  R30,LOW(0x3)
000390 f439      	BRNE _0x2000037
                +
000391 91e0 051b+LDS R30 , _glcd_state + ( 27 )
000393 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000395 9730      	SBIW R30,0
000396 f409      	BRNE _0x2000036
000397 c19e      	RJMP _0x2120008
                 _0x2000036:
                 _0x2000037:
000398 8508      	LDD  R16,Y+8
000399 85ed      	LDD  R30,Y+13
00039a 95e6      	LSR  R30
00039b 95e6      	LSR  R30
00039c 95e6      	LSR  R30
00039d 2f3e      	MOV  R19,R30
00039e 2fe2      	MOV  R30,R18
00039f 70e7      	ANDI R30,LOW(0x7)
0003a0 f419      	BRNE _0x2000039
0003a1 85ad      	LDD  R26,Y+13
0003a2 172a      	CP   R18,R26
0003a3 f0e9      	BREQ _0x2000038
                 _0x2000039:
0003a4 2fa0      	MOV  R26,R16
0003a5 27bb      	CLR  R27
0003a6 2fe3      	MOV  R30,R19
0003a7 e0f0      	LDI  R31,0
0003a8 940e 0973 	CALL __MULW12U
0003aa 85aa      	LDD  R26,Y+10
0003ab 85bb      	LDD  R27,Y+10+1
0003ac 940e 08ba 	CALL SUBOPT_0x2
0003ae 9526      	LSR  R18
0003af 9526      	LSR  R18
0003b0 9526      	LSR  R18
0003b1 2f53      	MOV  R21,R19
                 _0x200003B:
0003b2 935f      	PUSH R21
0003b3 5f5f      	SUBI R21,-1
0003b4 2fe2      	MOV  R30,R18
0003b5 91af      	POP  R26
0003b6 17ea      	CP   R30,R26
0003b7 f048      	BRLO _0x200003D
0003b8 2f10      	MOV  R17,R16
                 _0x200003E:
0003b9 2fe1      	MOV  R30,R17
0003ba 5011      	SUBI R17,1
0003bb 30e0      	CPI  R30,0
0003bc f019      	BREQ _0x2000040
0003bd 940e 08bf 	CALL SUBOPT_0x3
0003bf cff9      	RJMP _0x200003E
                 _0x2000040:
0003c0 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0003c1 85ae      	LDD  R26,Y+14
0003c2 170a      	CP   R16,R26
0003c3 f111      	BREQ _0x2000041
0003c4 85ee      	LDD  R30,Y+14
0003c5 85aa      	LDD  R26,Y+10
0003c6 85bb      	LDD  R27,Y+10+1
0003c7 e0f0      	LDI  R31,0
0003c8 940e 08ba 	CALL SUBOPT_0x2
0003ca 85ed      	LDD  R30,Y+13
0003cb 70e7      	ANDI R30,LOW(0x7)
0003cc f009      	BREQ _0x2000042
0003cd 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0003ce e020      	LDI  R18,LOW(0)
                 _0x2000043:
0003cf 932f      	PUSH R18
0003d0 5f2f      	SUBI R18,-1
0003d1 2fe3      	MOV  R30,R19
0003d2 91af      	POP  R26
0003d3 17ae      	CP   R26,R30
0003d4 f488      	BRSH _0x2000045
0003d5 851e      	LDD  R17,Y+14
                 _0x2000046:
0003d6 931f      	PUSH R17
0003d7 5f1f      	SUBI R17,-1
0003d8 2fe0      	MOV  R30,R16
0003d9 91af      	POP  R26
0003da 17ae      	CP   R26,R30
0003db f418      	BRSH _0x2000048
0003dc 940e 08bf 	CALL SUBOPT_0x3
0003de cff7      	RJMP _0x2000046
                 _0x2000048:
0003df 85ee      	LDD  R30,Y+14
0003e0 81ae      	LDD  R26,Y+6
0003e1 81bf      	LDD  R27,Y+6+1
0003e2 e0f0      	LDI  R31,0
0003e3 940e 08ba 	CALL SUBOPT_0x2
0003e5 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0003e6 85ef      	LDD  R30,Y+15
0003e7 70e7      	ANDI R30,LOW(0x7)
0003e8 2f3e      	MOV  R19,R30
                 _0x2000049:
0003e9 85ed      	LDD  R30,Y+13
0003ea 30e0      	CPI  R30,0
0003eb f409      	BRNE PC+2
0003ec c149      	RJMP _0x200004B
0003ed 85ea      	LDD  R30,Y+10
0003ee 85fb      	LDD  R31,Y+10+1
0003ef 83ee      	STD  Y+6,R30
0003f0 83ff      	STD  Y+6+1,R31
0003f1 e010      	LDI  R17,LOW(0)
0003f2 8908      	LDD  R16,Y+16
0003f3 3030      	CPI  R19,0
0003f4 f009      	BREQ PC+2
0003f5 c063      	RJMP _0x200004C
0003f6 85ad      	LDD  R26,Y+13
0003f7 30a8      	CPI  R26,LOW(0x8)
0003f8 f408      	BRSH PC+2
0003f9 c05a      	RJMP _0x200004D
0003fa 85e9      	LDD  R30,Y+9
0003fb 30e0      	CPI  R30,0
0003fc f011      	BREQ _0x2000052
0003fd 30e3      	CPI  R30,LOW(0x3)
0003fe f409      	BRNE _0x2000053
                 _0x2000052:
0003ff c002      	RJMP _0x2000054
                 _0x2000053:
000400 30e7      	CPI  R30,LOW(0x7)
000401 f409      	BRNE _0x2000055
                 _0x2000054:
000402 c002      	RJMP _0x2000056
                 _0x2000055:
000403 30e8      	CPI  R30,LOW(0x8)
000404 f409      	BRNE _0x2000057
                 _0x2000056:
000405 c002      	RJMP _0x2000058
                 _0x2000057:
000406 30e9      	CPI  R30,LOW(0x9)
000407 f409      	BRNE _0x2000059
                 _0x2000058:
000408 c002      	RJMP _0x200005A
                 _0x2000059:
000409 30ea      	CPI  R30,LOW(0xA)
00040a f421      	BRNE _0x200005B
                 _0x200005A:
00040b 930a      	ST   -Y,R16
00040c 89a8      	LDD  R26,Y+16
00040d de2b      	RCALL _pcd8544_gotoxy
00040e c004      	RJMP _0x2000050
                 _0x200005B:
00040f 30e6      	CPI  R30,LOW(0x6)
000410 f411      	BRNE _0x2000050
000411 940e 08cc 	CALL SUBOPT_0x4
                 _0x2000050:
                 _0x200005D:
000413 931f      	PUSH R17
000414 5f1f      	SUBI R17,-1
000415 85ee      	LDD  R30,Y+14
000416 91af      	POP  R26
000417 17ae      	CP   R26,R30
000418 f5a0      	BRSH _0x200005F
000419 85a9      	LDD  R26,Y+9
00041a 30a6      	CPI  R26,LOW(0x6)
00041b f451      	BRNE _0x2000060
00041c 940e 08d0 	CALL SUBOPT_0x5
00041e 93fa      	ST   -Y,R31
00041f 93ea      	ST   -Y,R30
000420 940e 08aa 	CALL SUBOPT_0x0
000422 81a0      	LD   R26,Z
000423 940e 088b 	CALL _glcd_writemem
000425 c026      	RJMP _0x2000061
                 _0x2000060:
000426 85e9      	LDD  R30,Y+9
000427 30e9      	CPI  R30,LOW(0x9)
000428 f411      	BRNE _0x2000065
000429 e050      	LDI  R21,LOW(0)
00042a c00e      	RJMP _0x2000066
                 _0x2000065:
00042b 30ea      	CPI  R30,LOW(0xA)
00042c f411      	BRNE _0x2000064
00042d ef5f      	LDI  R21,LOW(255)
00042e c00a      	RJMP _0x2000066
                 _0x2000064:
00042f 940e 08d0 	CALL SUBOPT_0x5
000431 940e 08d9 	CALL SUBOPT_0x6
000433 2f5e      	MOV  R21,R30
000434 85e9      	LDD  R30,Y+9
000435 30e7      	CPI  R30,LOW(0x7)
000436 f011      	BREQ _0x200006D
000437 30e8      	CPI  R30,LOW(0x8)
000438 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000439 940e 08df 	CALL SUBOPT_0x7
00043b 2f5e      	MOV  R21,R30
00043c c006      	RJMP _0x200006F
                 _0x200006E:
00043d 30e3      	CPI  R30,LOW(0x3)
00043e f411      	BRNE _0x2000071
00043f 9550      	COM  R21
000440 c002      	RJMP _0x2000072
                 _0x2000071:
000441 30e0      	CPI  R30,0
000442 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000443 2fa5      	MOV  R26,R21
000444 ddd4      	RCALL _pcd8544_wrdata_G100
000445 c006      	RJMP _0x200006B
                 _0x2000074:
000446 940e 08e3 	CALL SUBOPT_0x8
000448 efef      	LDI  R30,LOW(255)
000449 93ea      	ST   -Y,R30
00044a 85ad      	LDD  R26,Y+13
00044b ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
00044c cfc6      	RJMP _0x200005D
                 _0x200005F:
00044d 85ef      	LDD  R30,Y+15
00044e 5fe8      	SUBI R30,-LOW(8)
00044f 87ef      	STD  Y+15,R30
000450 85ed      	LDD  R30,Y+13
000451 50e8      	SUBI R30,LOW(8)
000452 87ed      	STD  Y+13,R30
000453 c0d9      	RJMP _0x2000075
                 _0x200004D:
000454 855d      	LDD  R21,Y+13
000455 e020      	LDI  R18,LOW(0)
000456 e0e0      	LDI  R30,LOW(0)
000457 87ed      	STD  Y+13,R30
000458 c07e      	RJMP _0x2000076
                 _0x200004C:
000459 2fe3      	MOV  R30,R19
00045a 85ad      	LDD  R26,Y+13
00045b 0fae      	ADD  R26,R30
00045c 30a9      	CPI  R26,LOW(0x9)
00045d f420      	BRSH _0x2000077
00045e 852d      	LDD  R18,Y+13
00045f e0e0      	LDI  R30,LOW(0)
000460 87ed      	STD  Y+13,R30
000461 c003      	RJMP _0x2000078
                 _0x2000077:
000462 e0e8      	LDI  R30,LOW(8)
000463 1be3      	SUB  R30,R19
000464 2f2e      	MOV  R18,R30
                 _0x2000078:
000465 933a      	ST   -Y,R19
000466 2fa2      	MOV  R26,R18
000467 940e 0839 	CALL _glcd_getmask
000469 2f4e      	MOV  R20,R30
00046a 85e9      	LDD  R30,Y+9
00046b 30e6      	CPI  R30,LOW(0x6)
00046c f511      	BRNE _0x200007C
00046d 940e 08cc 	CALL SUBOPT_0x4
                 _0x200007D:
00046f 931f      	PUSH R17
000470 5f1f      	SUBI R17,-1
000471 85ee      	LDD  R30,Y+14
000472 91af      	POP  R26
000473 17ae      	CP   R26,R30
000474 f4c8      	BRSH _0x200007F
000475 940e 08aa 	CALL SUBOPT_0x0
000477 81e0      	LD   R30,Z
000478 23e4      	AND  R30,R20
000479 2fae      	MOV  R26,R30
00047a 2fe3      	MOV  R30,R19
00047b 940e 096b 	CALL __LSRB12
00047d 940e 08e9 	CALL SUBOPT_0x9
00047f 2fe3      	MOV  R30,R19
000480 2fa4      	MOV  R26,R20
000481 940e 096b 	CALL __LSRB12
000483 95e0      	COM  R30
000484 21e1      	AND  R30,R1
000485 2b5e      	OR   R21,R30
000486 940e 08d0 	CALL SUBOPT_0x5
000488 93fa      	ST   -Y,R31
000489 93ea      	ST   -Y,R30
00048a 2fa5      	MOV  R26,R21
00048b 940e 088b 	CALL _glcd_writemem
00048d cfe1      	RJMP _0x200007D
                 _0x200007F:
00048e c02c      	RJMP _0x200007B
                 _0x200007C:
00048f 30e9      	CPI  R30,LOW(0x9)
000490 f411      	BRNE _0x2000080
000491 e050      	LDI  R21,LOW(0)
000492 c003      	RJMP _0x2000081
                 _0x2000080:
000493 30ea      	CPI  R30,LOW(0xA)
000494 f4a9      	BRNE _0x2000087
000495 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
000496 940e 08df 	CALL SUBOPT_0x7
000498 2fae      	MOV  R26,R30
000499 2fe3      	MOV  R30,R19
00049a 940e 0963 	CALL __LSLB12
00049c 2f5e      	MOV  R21,R30
                 _0x2000084:
00049d 931f      	PUSH R17
00049e 5f1f      	SUBI R17,-1
00049f 85ee      	LDD  R30,Y+14
0004a0 91af      	POP  R26
0004a1 17ae      	CP   R26,R30
0004a2 f430      	BRSH _0x2000086
0004a3 940e 08e3 	CALL SUBOPT_0x8
0004a5 934a      	ST   -Y,R20
0004a6 e0a0      	LDI  R26,LOW(0)
0004a7 de78      	RCALL _pcd8544_wrmasked_G100
0004a8 cff4      	RJMP _0x2000084
                 _0x2000086:
0004a9 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0004aa 931f      	PUSH R17
0004ab 5f1f      	SUBI R17,-1
0004ac 85ee      	LDD  R30,Y+14
0004ad 91af      	POP  R26
0004ae 17ae      	CP   R26,R30
0004af f458      	BRSH _0x200008A
0004b0 940e 08f4 	CALL SUBOPT_0xA
0004b2 2fae      	MOV  R26,R30
0004b3 2fe3      	MOV  R30,R19
0004b4 940e 0963 	CALL __LSLB12
0004b6 93ea      	ST   -Y,R30
0004b7 934a      	ST   -Y,R20
0004b8 85ad      	LDD  R26,Y+13
0004b9 de66      	RCALL _pcd8544_wrmasked_G100
0004ba cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0004bb 85ed      	LDD  R30,Y+13
0004bc 30e0      	CPI  R30,0
0004bd f409      	BRNE _0x200008B
0004be c077      	RJMP _0x200004B
                 _0x200008B:
0004bf 85ad      	LDD  R26,Y+13
0004c0 30a8      	CPI  R26,LOW(0x8)
0004c1 f428      	BRSH _0x200008C
0004c2 85ed      	LDD  R30,Y+13
0004c3 1be2      	SUB  R30,R18
0004c4 2f5e      	MOV  R21,R30
0004c5 e0e0      	LDI  R30,LOW(0)
0004c6 c003      	RJMP _0x20000A2
                 _0x200008C:
0004c7 2f53      	MOV  R21,R19
0004c8 85ed      	LDD  R30,Y+13
0004c9 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0004ca 87ed      	STD  Y+13,R30
0004cb e010      	LDI  R17,LOW(0)
0004cc 85ef      	LDD  R30,Y+15
0004cd 5fe8      	SUBI R30,-LOW(8)
0004ce 87ef      	STD  Y+15,R30
0004cf e0e8      	LDI  R30,LOW(8)
0004d0 1be3      	SUB  R30,R19
0004d1 2f2e      	MOV  R18,R30
0004d2 8908      	LDD  R16,Y+16
0004d3 85ea      	LDD  R30,Y+10
0004d4 85fb      	LDD  R31,Y+10+1
0004d5 83ee      	STD  Y+6,R30
0004d6 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0004d7 2fe5      	MOV  R30,R21
0004d8 e0f0      	LDI  R31,0
0004d9 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0004da 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0004db 9144      	LPM  R20,Z
0004dc 85e9      	LDD  R30,Y+9
0004dd 30e6      	CPI  R30,LOW(0x6)
0004de f511      	BRNE _0x2000091
0004df 940e 08cc 	CALL SUBOPT_0x4
                 _0x2000092:
0004e1 931f      	PUSH R17
0004e2 5f1f      	SUBI R17,-1
0004e3 85ee      	LDD  R30,Y+14
0004e4 91af      	POP  R26
0004e5 17ae      	CP   R26,R30
0004e6 f4c8      	BRSH _0x2000094
0004e7 940e 08aa 	CALL SUBOPT_0x0
0004e9 81e0      	LD   R30,Z
0004ea 23e4      	AND  R30,R20
0004eb 2fae      	MOV  R26,R30
0004ec 2fe2      	MOV  R30,R18
0004ed 940e 0963 	CALL __LSLB12
0004ef 940e 08e9 	CALL SUBOPT_0x9
0004f1 2fe2      	MOV  R30,R18
0004f2 2fa4      	MOV  R26,R20
0004f3 940e 0963 	CALL __LSLB12
0004f5 95e0      	COM  R30
0004f6 21e1      	AND  R30,R1
0004f7 2b5e      	OR   R21,R30
0004f8 940e 08d0 	CALL SUBOPT_0x5
0004fa 93fa      	ST   -Y,R31
0004fb 93ea      	ST   -Y,R30
0004fc 2fa5      	MOV  R26,R21
0004fd 940e 088b 	CALL _glcd_writemem
0004ff cfe1      	RJMP _0x2000092
                 _0x2000094:
000500 c02c      	RJMP _0x2000090
                 _0x2000091:
000501 30e9      	CPI  R30,LOW(0x9)
000502 f411      	BRNE _0x2000095
000503 e050      	LDI  R21,LOW(0)
000504 c003      	RJMP _0x2000096
                 _0x2000095:
000505 30ea      	CPI  R30,LOW(0xA)
000506 f4a9      	BRNE _0x200009C
000507 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000508 940e 08df 	CALL SUBOPT_0x7
00050a 2fae      	MOV  R26,R30
00050b 2fe2      	MOV  R30,R18
00050c 940e 096b 	CALL __LSRB12
00050e 2f5e      	MOV  R21,R30
                 _0x2000099:
00050f 931f      	PUSH R17
000510 5f1f      	SUBI R17,-1
000511 85ee      	LDD  R30,Y+14
000512 91af      	POP  R26
000513 17ae      	CP   R26,R30
000514 f430      	BRSH _0x200009B
000515 940e 08e3 	CALL SUBOPT_0x8
000517 934a      	ST   -Y,R20
000518 e0a0      	LDI  R26,LOW(0)
000519 de06      	RCALL _pcd8544_wrmasked_G100
00051a cff4      	RJMP _0x2000099
                 _0x200009B:
00051b c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
00051c 931f      	PUSH R17
00051d 5f1f      	SUBI R17,-1
00051e 85ee      	LDD  R30,Y+14
00051f 91af      	POP  R26
000520 17ae      	CP   R26,R30
000521 f458      	BRSH _0x200009F
000522 940e 08f4 	CALL SUBOPT_0xA
000524 2fae      	MOV  R26,R30
000525 2fe2      	MOV  R30,R18
000526 940e 096b 	CALL __LSRB12
000528 93ea      	ST   -Y,R30
000529 934a      	ST   -Y,R20
00052a 85ad      	LDD  R26,Y+13
00052b ddf4      	RCALL _pcd8544_wrmasked_G100
00052c cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
00052d 85e8      	LDD  R30,Y+8
00052e 85aa      	LDD  R26,Y+10
00052f 85bb      	LDD  R27,Y+10+1
000530 e0f0      	LDI  R31,0
000531 0fea      	ADD  R30,R26
000532 1ffb      	ADC  R31,R27
000533 87ea      	STD  Y+10,R30
000534 87fb      	STD  Y+10+1,R31
000535 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2120008:
000536 940e 09b0 	CALL __LOADLOCR6
000538 9661      	ADIW R28,17
000539 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00053a 940e 0901 	CALL SUBOPT_0xB
00053c f024      	BRLT _0x2020003
00053d e0e0      	LDI  R30,LOW(0)
00053e e0f0      	LDI  R31,HIGH(0)
00053f 940c 0842 	JMP  _0x2120003
                 _0x2020003:
000541 81a8      	LD   R26,Y
000542 81b9      	LDD  R27,Y+1
000543 35a4      	CPI  R26,LOW(0x54)
000544 e0e0      	LDI  R30,HIGH(0x54)
000545 07be      	CPC  R27,R30
000546 f024      	BRLT _0x2020004
000547 e5e3      	LDI  R30,LOW(83)
000548 e0f0      	LDI  R31,HIGH(83)
000549 940c 0842 	JMP  _0x2120003
                 _0x2020004:
00054b 81e8      	LD   R30,Y
00054c 81f9      	LDD  R31,Y+1
00054d 940c 0842 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00054f 940e 0901 	CALL SUBOPT_0xB
000551 f024      	BRLT _0x2020005
000552 e0e0      	LDI  R30,LOW(0)
000553 e0f0      	LDI  R31,HIGH(0)
000554 940c 0842 	JMP  _0x2120003
                 _0x2020005:
000556 81a8      	LD   R26,Y
000557 81b9      	LDD  R27,Y+1
000558 97d0      	SBIW R26,48
000559 f024      	BRLT _0x2020006
00055a e2ef      	LDI  R30,LOW(47)
00055b e0f0      	LDI  R31,HIGH(47)
00055c 940c 0842 	JMP  _0x2120003
                 _0x2020006:
00055e 81e8      	LD   R30,Y
00055f 81f9      	LDD  R31,Y+1
000560 940c 0842 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000562 93ba      	ST   -Y,R27
000563 93aa      	ST   -Y,R26
000564 9723      	SBIW R28,3
000565 940e 0908 	CALL SUBOPT_0xC
000567 018f      	MOVW R16,R30
000568 2e00      	MOV  R0,R16
000569 2a01      	OR   R0,R17
00056a f419      	BRNE _0x202000B
00056b e0e0      	LDI  R30,LOW(0)
00056c e0f0      	LDI  R31,HIGH(0)
00056d c05f      	RJMP _0x2120007
                 _0x202000B:
00056e 940e 090f 	CALL SUBOPT_0xD
000570 820f      	STD  Y+7,R0
000571 940e 090f 	CALL SUBOPT_0xD
000573 820e      	STD  Y+6,R0
000574 940e 090f 	CALL SUBOPT_0xD
000576 8608      	STD  Y+8,R0
000577 85eb      	LDD  R30,Y+11
000578 85a8      	LDD  R26,Y+8
000579 17ea      	CP   R30,R26
00057a f418      	BRSH _0x202000C
00057b e0e0      	LDI  R30,LOW(0)
00057c e0f0      	LDI  R31,HIGH(0)
00057d c04f      	RJMP _0x2120007
                 _0x202000C:
00057e 01f8      	MOVW R30,R16
                +
00057f 5f0f     +SUBI R16 , LOW ( - 1 )
000580 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000581 9154      	LPM  R21,Z
000582 85a8      	LDD  R26,Y+8
000583 27bb      	CLR  R27
000584 27ee      	CLR  R30
000585 0fa5      	ADD  R26,R21
000586 1fbe      	ADC  R27,R30
000587 85eb      	LDD  R30,Y+11
000588 e0f0      	LDI  R31,0
000589 17ea      	CP   R30,R26
00058a 07fb      	CPC  R31,R27
00058b f018      	BRLO _0x202000D
00058c e0e0      	LDI  R30,LOW(0)
00058d e0f0      	LDI  R31,HIGH(0)
00058e c03e      	RJMP _0x2120007
                 _0x202000D:
00058f 81ee      	LDD  R30,Y+6
000590 95e6      	LSR  R30
000591 95e6      	LSR  R30
000592 95e6      	LSR  R30
000593 2f4e      	MOV  R20,R30
000594 81ee      	LDD  R30,Y+6
000595 70e7      	ANDI R30,LOW(0x7)
000596 f009      	BREQ _0x202000E
000597 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000598 81ef      	LDD  R30,Y+7
000599 30e0      	CPI  R30,0
00059a f0a1      	BREQ _0x202000F
00059b 85a9      	LDD  R26,Y+9
00059c 85ba      	LDD  R27,Y+9+1
00059d 93ec      	ST   X,R30
00059e 85a8      	LDD  R26,Y+8
00059f 85eb      	LDD  R30,Y+11
0005a0 1bea      	SUB  R30,R26
0005a1 e0f0      	LDI  R31,0
0005a2 01df      	MOVW R26,R30
0005a3 81ef      	LDD  R30,Y+7
0005a4 e0f0      	LDI  R31,0
0005a5 940e 0973 	CALL __MULW12U
0005a7 01df      	MOVW R26,R30
0005a8 2fe4      	MOV  R30,R20
0005a9 e0f0      	LDI  R31,0
0005aa 940e 0973 	CALL __MULW12U
0005ac 0fe0      	ADD  R30,R16
0005ad 1ff1      	ADC  R31,R17
0005ae c01e      	RJMP _0x2120007
                 _0x202000F:
0005af 0198      	MOVW R18,R16
0005b0 2fe5      	MOV  R30,R21
0005b1 e0f0      	LDI  R31,0
                +
0005b2 0f0e     +ADD R16 , R30
0005b3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0005b4 85a8      	LDD  R26,Y+8
0005b5 5faf      	SUBI R26,-LOW(1)
0005b6 87a8      	STD  Y+8,R26
0005b7 50a1      	SUBI R26,LOW(1)
0005b8 85eb      	LDD  R30,Y+11
0005b9 17ae      	CP   R26,R30
0005ba f460      	BRSH _0x2020012
0005bb 01f9      	MOVW R30,R18
                +
0005bc 5f2f     +SUBI R18 , LOW ( - 1 )
0005bd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0005be 91a4      	LPM  R26,Z
0005bf e0b0      	LDI  R27,0
0005c0 2fe4      	MOV  R30,R20
0005c1 e0f0      	LDI  R31,0
0005c2 940e 0973 	CALL __MULW12U
                +
0005c4 0f0e     +ADD R16 , R30
0005c5 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0005c6 cfed      	RJMP _0x2020010
                 _0x2020012:
0005c7 01f9      	MOVW R30,R18
0005c8 91e4      	LPM  R30,Z
0005c9 85a9      	LDD  R26,Y+9
0005ca 85ba      	LDD  R27,Y+9+1
0005cb 93ec      	ST   X,R30
0005cc 01f8      	MOVW R30,R16
                 _0x2120007:
0005cd 940e 09b0 	CALL __LOADLOCR6
0005cf 962c      	ADIW R28,12
0005d0 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0005d1 e0e0      	LDI  R30,LOW(0)
                +
0005d2 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0005d4 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0005d6 27bb      	CLR  R27
0005d7 940e 0914 	CALL SUBOPT_0xE
0005d9 e0f0      	LDI  R31,0
0005da 0fae      	ADD  R26,R30
0005db 1fbf      	ADC  R27,R31
                +
0005dc 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0005de e0f0      	LDI  R31,0
0005df 0fae      	ADD  R26,R30
0005e0 1fbf      	ADC  R27,R31
0005e1 df6d      	RCALL _glcd_clipy
                +
0005e2 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0005e4 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0005e5 93aa      	ST   -Y,R26
0005e6 9721      	SBIW R28,1
0005e7 940e 0908 	CALL SUBOPT_0xC
0005e9 9730      	SBIW R30,0
0005ea f409      	BRNE PC+2
0005eb c055      	RJMP _0x202001F
0005ec 81af      	LDD  R26,Y+7
0005ed 30aa      	CPI  R26,LOW(0xA)
0005ee f409      	BRNE _0x2020020
0005ef c04f      	RJMP _0x2020021
                 _0x2020020:
0005f0 81ef      	LDD  R30,Y+7
0005f1 93ea      	ST   -Y,R30
0005f2 01de      	MOVW R26,R28
0005f3 9617      	ADIW R26,7
0005f4 df6d      	RCALL _glcd_getcharw_G101
0005f5 01af      	MOVW R20,R30
0005f6 9730      	SBIW R30,0
0005f7 f409      	BRNE _0x2020022
0005f8 c04a      	RJMP _0x2120006
                 _0x2020022:
                +
0005f9 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0005fb 81ae      	LDD  R26,Y+6
0005fc 0fea      	ADD  R30,R26
0005fd 2f3e      	MOV  R19,R30
                +
0005fe 91a0 0502+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000600 27bb      	CLR  R27
000601 e0f0      	LDI  R31,0
000602 0fea      	ADD  R30,R26
000603 1ffb      	ADC  R31,R27
000604 018f      	MOVW R16,R30
                +
000605 3505     +CPI R16 , LOW ( 85 )
000606 e0e0     +LDI R30 , HIGH ( 85 )
000607 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000608 f018      	BRLO _0x2020023
000609 2f03      	MOV  R16,R19
00060a 2711      	CLR  R17
00060b dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
00060c 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00060e 93ea      	ST   -Y,R30
                +
00060f 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000611 93ea      	ST   -Y,R30
000612 85e8      	LDD  R30,Y+8
000613 93ea      	ST   -Y,R30
000614 940e 0914 	CALL SUBOPT_0xE
000616 93ea      	ST   -Y,R30
000617 e0e1      	LDI  R30,LOW(1)
000618 93ea      	ST   -Y,R30
000619 935a      	ST   -Y,R21
00061a 934a      	ST   -Y,R20
00061b e0a7      	LDI  R26,LOW(7)
00061c dd3c      	RCALL _glcd_block
                +
00061d 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00061f 81ae      	LDD  R26,Y+6
000620 0fea      	ADD  R30,R26
000621 93ea      	ST   -Y,R30
                +
000622 91e0 0503+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000624 93ea      	ST   -Y,R30
                +
000625 91e0 0506+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000627 93ea      	ST   -Y,R30
000628 940e 0914 	CALL SUBOPT_0xE
00062a 940e 091b 	CALL SUBOPT_0xF
                +
00062c 91e0 0502+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00062e 93ea      	ST   -Y,R30
                +
00062f 91a0 0503+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000631 940e 0914 	CALL SUBOPT_0xE
000633 0fea      	ADD  R30,R26
000634 93ea      	ST   -Y,R30
000635 933a      	ST   -Y,R19
                +
000636 91e0 0507+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000638 940e 091b 	CALL SUBOPT_0xF
00063a e5e4      	LDI  R30,LOW(84)
00063b e0f0      	LDI  R31,HIGH(84)
00063c 17e0      	CP   R30,R16
00063d 07f1      	CPC  R31,R17
00063e f411      	BRNE _0x2020024
                 _0x2020021:
00063f df91      	RCALL _glcd_new_line_G101
000640 c002      	RJMP _0x2120006
                 _0x2020024:
                 _0x202001F:
                +
000641 9300 0502+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
000643 940e 09b0 	CALL __LOADLOCR6
000645 9628      	ADIW R28,8
000646 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000647 93ba      	ST   -Y,R27
000648 93aa      	ST   -Y,R26
000649 931a      	ST   -Y,R17
00064a 81ec      	LDD  R30,Y+4
00064b 93ea      	ST   -Y,R30
00064c 81ac      	LDD  R26,Y+4
00064d d00e      	RCALL _glcd_moveto
                 _0x2020025:
00064e 81a9      	LDD  R26,Y+1
00064f 81ba      	LDD  R27,Y+1+1
000650 91ed      	LD   R30,X+
000651 83a9      	STD  Y+1,R26
000652 83ba      	STD  Y+1+1,R27
000653 2f1e      	MOV  R17,R30
000654 30e0      	CPI  R30,0
000655 f019      	BREQ _0x2020027
000656 2fa1      	MOV  R26,R17
000657 df8d      	RCALL _glcd_putchar
000658 cff5      	RJMP _0x2020025
                 _0x2020027:
000659 8118      	LDD  R17,Y+0
00065a 940c 081e 	JMP  _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00065c 93aa      	ST   -Y,R26
00065d 81a9      	LDD  R26,Y+1
00065e 27bb      	CLR  R27
00065f deda      	RCALL _glcd_clipx
                +
000660 93e0 0502+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000662 81a8      	LD   R26,Y
000663 27bb      	CLR  R27
000664 deea      	RCALL _glcd_clipy
                +
000665 93e0 0503+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000667 940c 0842 	JMP  _0x2120003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G103:
                 ; .FSTART _put_buff_G103
000669 93ba      	ST   -Y,R27
00066a 93aa      	ST   -Y,R26
00066b 931a      	ST   -Y,R17
00066c 930a      	ST   -Y,R16
00066d 81aa      	LDD  R26,Y+2
00066e 81bb      	LDD  R27,Y+2+1
00066f 9612      	ADIW R26,2
000670 940e 097b 	CALL __GETW1P
000672 9730      	SBIW R30,0
000673 f159      	BREQ _0x2060010
000674 81aa      	LDD  R26,Y+2
000675 81bb      	LDD  R27,Y+2+1
000676 9614      	ADIW R26,4
000677 940e 097b 	CALL __GETW1P
000679 018f      	MOVW R16,R30
00067a 9730      	SBIW R30,0
00067b f061      	BREQ _0x2060012
                +
00067c 3002     +CPI R16 , LOW ( 2 )
00067d e0e0     +LDI R30 , HIGH ( 2 )
00067e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00067f f098      	BRLO _0x2060013
000680 01f8      	MOVW R30,R16
000681 9731      	SBIW R30,1
000682 018f      	MOVW R16,R30
                +
000683 81aa     +LDD R26 , Y + 2
000684 81bb     +LDD R27 , Y + 2 + 1
000685 9614     +ADIW R26 , 4
000686 93ed     +ST X + , R30
000687 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2060012:
000688 81aa      	LDD  R26,Y+2
000689 81bb      	LDD  R27,Y+2+1
00068a 9612      	ADIW R26,2
00068b 91ed      	LD   R30,X+
00068c 91fd      	LD   R31,X+
00068d 9631      	ADIW R30,1
00068e 93fe      	ST   -X,R31
00068f 93ee      	ST   -X,R30
000690 9731      	SBIW R30,1
000691 81ac      	LDD  R26,Y+4
000692 83a0      	STD  Z+0,R26
                 _0x2060013:
000693 81aa      	LDD  R26,Y+2
000694 81bb      	LDD  R27,Y+2+1
000695 940e 097b 	CALL __GETW1P
000697 23ff      	TST  R31
000698 f02a      	BRMI _0x2060014
000699 91ed      	LD   R30,X+
00069a 91fd      	LD   R31,X+
00069b 9631      	ADIW R30,1
00069c 93fe      	ST   -X,R31
00069d 93ee      	ST   -X,R30
                 _0x2060014:
00069e c006      	RJMP _0x2060015
                 _0x2060010:
00069f 81aa      	LDD  R26,Y+2
0006a0 81bb      	LDD  R27,Y+2+1
0006a1 efef      	LDI  R30,LOW(65535)
0006a2 efff      	LDI  R31,HIGH(65535)
0006a3 93ed      	ST   X+,R30
0006a4 93fc      	ST   X,R31
                 _0x2060015:
0006a5 8119      	LDD  R17,Y+1
0006a6 8108      	LDD  R16,Y+0
0006a7 c176      	RJMP _0x2120004
                 ; .FEND
                 __print_G103:
                 ; .FSTART __print_G103
0006a8 93ba      	ST   -Y,R27
0006a9 93aa      	ST   -Y,R26
0006aa 9726      	SBIW R28,6
0006ab 940e 09a9 	CALL __SAVELOCR6
0006ad e010      	LDI  R17,0
0006ae 85ac      	LDD  R26,Y+12
0006af 85bd      	LDD  R27,Y+12+1
0006b0 e0e0      	LDI  R30,LOW(0)
0006b1 e0f0      	LDI  R31,HIGH(0)
0006b2 93ed      	ST   X+,R30
0006b3 93fc      	ST   X,R31
                 _0x2060016:
0006b4 89ea      	LDD  R30,Y+18
0006b5 89fb      	LDD  R31,Y+18+1
0006b6 9631      	ADIW R30,1
0006b7 8bea      	STD  Y+18,R30
0006b8 8bfb      	STD  Y+18+1,R31
0006b9 9731      	SBIW R30,1
0006ba 91e4      	LPM  R30,Z
0006bb 2f2e      	MOV  R18,R30
0006bc 30e0      	CPI  R30,0
0006bd f409      	BRNE PC+2
0006be c115      	RJMP _0x2060018
0006bf 2fe1      	MOV  R30,R17
0006c0 30e0      	CPI  R30,0
0006c1 f439      	BRNE _0x206001C
0006c2 3225      	CPI  R18,37
0006c3 f411      	BRNE _0x206001D
0006c4 e011      	LDI  R17,LOW(1)
0006c5 c002      	RJMP _0x206001E
                 _0x206001D:
0006c6 940e 0925 	CALL SUBOPT_0x10
                 _0x206001E:
0006c8 c10a      	RJMP _0x206001B
                 _0x206001C:
0006c9 30e1      	CPI  R30,LOW(0x1)
0006ca f4a9      	BRNE _0x206001F
0006cb 3225      	CPI  R18,37
0006cc f419      	BRNE _0x2060020
0006cd 940e 0925 	CALL SUBOPT_0x10
0006cf c102      	RJMP _0x20600CC
                 _0x2060020:
0006d0 e012      	LDI  R17,LOW(2)
0006d1 e040      	LDI  R20,LOW(0)
0006d2 e000      	LDI  R16,LOW(0)
0006d3 322d      	CPI  R18,45
0006d4 f411      	BRNE _0x2060021
0006d5 e001      	LDI  R16,LOW(1)
0006d6 c0fc      	RJMP _0x206001B
                 _0x2060021:
0006d7 322b      	CPI  R18,43
0006d8 f411      	BRNE _0x2060022
0006d9 e24b      	LDI  R20,LOW(43)
0006da c0f8      	RJMP _0x206001B
                 _0x2060022:
0006db 3220      	CPI  R18,32
0006dc f411      	BRNE _0x2060023
0006dd e240      	LDI  R20,LOW(32)
0006de c0f4      	RJMP _0x206001B
                 _0x2060023:
0006df c002      	RJMP _0x2060024
                 _0x206001F:
0006e0 30e2      	CPI  R30,LOW(0x2)
0006e1 f439      	BRNE _0x2060025
                 _0x2060024:
0006e2 e050      	LDI  R21,LOW(0)
0006e3 e013      	LDI  R17,LOW(3)
0006e4 3320      	CPI  R18,48
0006e5 f411      	BRNE _0x2060026
0006e6 6800      	ORI  R16,LOW(128)
0006e7 c0eb      	RJMP _0x206001B
                 _0x2060026:
0006e8 c003      	RJMP _0x2060027
                 _0x2060025:
0006e9 30e3      	CPI  R30,LOW(0x3)
0006ea f009      	BREQ PC+2
0006eb c0e7      	RJMP _0x206001B
                 _0x2060027:
0006ec 3320      	CPI  R18,48
0006ed f010      	BRLO _0x206002A
0006ee 332a      	CPI  R18,58
0006ef f008      	BRLO _0x206002B
                 _0x206002A:
0006f0 c007      	RJMP _0x2060029
                 _0x206002B:
0006f1 e0aa      	LDI  R26,LOW(10)
0006f2 9f5a      	MUL  R21,R26
0006f3 2d50      	MOV  R21,R0
0006f4 2fe2      	MOV  R30,R18
0006f5 53e0      	SUBI R30,LOW(48)
0006f6 0f5e      	ADD  R21,R30
0006f7 c0db      	RJMP _0x206001B
                 _0x2060029:
0006f8 2fe2      	MOV  R30,R18
0006f9 36e3      	CPI  R30,LOW(0x63)
0006fa f449      	BRNE _0x206002F
0006fb 940e 092c 	CALL SUBOPT_0x11
0006fd 89e8      	LDD  R30,Y+16
0006fe 89f9      	LDD  R31,Y+16+1
0006ff 81a4      	LDD  R26,Z+4
000700 93aa      	ST   -Y,R26
000701 940e 0932 	CALL SUBOPT_0x12
000703 c0ce      	RJMP _0x2060030
                 _0x206002F:
000704 37e3      	CPI  R30,LOW(0x73)
000705 f441      	BRNE _0x2060032
000706 940e 092c 	CALL SUBOPT_0x11
000708 940e 0938 	CALL SUBOPT_0x13
00070a 940e 0820 	CALL _strlen
00070c 2f1e      	MOV  R17,R30
00070d c00a      	RJMP _0x2060033
                 _0x2060032:
00070e 37e0      	CPI  R30,LOW(0x70)
00070f f461      	BRNE _0x2060035
000710 940e 092c 	CALL SUBOPT_0x11
000712 940e 0938 	CALL SUBOPT_0x13
000714 940e 082c 	CALL _strlenf
000716 2f1e      	MOV  R17,R30
000717 6008      	ORI  R16,LOW(8)
                 _0x2060033:
000718 6002      	ORI  R16,LOW(2)
000719 770f      	ANDI R16,LOW(127)
00071a e030      	LDI  R19,LOW(0)
00071b c034      	RJMP _0x2060036
                 _0x2060035:
00071c 36e4      	CPI  R30,LOW(0x64)
00071d f011      	BREQ _0x2060039
00071e 36e9      	CPI  R30,LOW(0x69)
00071f f411      	BRNE _0x206003A
                 _0x2060039:
000720 6004      	ORI  R16,LOW(4)
000721 c002      	RJMP _0x206003B
                 _0x206003A:
000722 37e5      	CPI  R30,LOW(0x75)
000723 f431      	BRNE _0x206003C
                 _0x206003B:
000724 e7ea      	LDI  R30,LOW(_tbl10_G103*2)
000725 e0f2      	LDI  R31,HIGH(_tbl10_G103*2)
000726 83ee      	STD  Y+6,R30
000727 83ff      	STD  Y+6+1,R31
000728 e015      	LDI  R17,LOW(5)
000729 c00c      	RJMP _0x206003D
                 _0x206003C:
00072a 35e8      	CPI  R30,LOW(0x58)
00072b f411      	BRNE _0x206003F
00072c 6008      	ORI  R16,LOW(8)
00072d c003      	RJMP _0x2060040
                 _0x206003F:
00072e 37e8      	CPI  R30,LOW(0x78)
00072f f009      	BREQ PC+2
000730 c0a1      	RJMP _0x2060071
                 _0x2060040:
000731 e8e4      	LDI  R30,LOW(_tbl16_G103*2)
000732 e0f2      	LDI  R31,HIGH(_tbl16_G103*2)
000733 83ee      	STD  Y+6,R30
000734 83ff      	STD  Y+6+1,R31
000735 e014      	LDI  R17,LOW(4)
                 _0x206003D:
000736 ff02      	SBRS R16,2
000737 c014      	RJMP _0x2060042
000738 940e 092c 	CALL SUBOPT_0x11
00073a 940e 0942 	CALL SUBOPT_0x14
00073c 85ab      	LDD  R26,Y+11
00073d 23aa      	TST  R26
00073e f43a      	BRPL _0x2060043
00073f 85ea      	LDD  R30,Y+10
000740 85fb      	LDD  R31,Y+10+1
000741 940e 095f 	CALL __ANEGW1
000743 87ea      	STD  Y+10,R30
000744 87fb      	STD  Y+10+1,R31
000745 e24d      	LDI  R20,LOW(45)
                 _0x2060043:
000746 3040      	CPI  R20,0
000747 f011      	BREQ _0x2060044
000748 5f1f      	SUBI R17,-LOW(1)
000749 c001      	RJMP _0x2060045
                 _0x2060044:
00074a 7f0b      	ANDI R16,LOW(251)
                 _0x2060045:
00074b c004      	RJMP _0x2060046
                 _0x2060042:
00074c 940e 092c 	CALL SUBOPT_0x11
00074e 940e 0942 	CALL SUBOPT_0x14
                 _0x2060046:
                 _0x2060036:
000750 fd00      	SBRC R16,0
000751 c011      	RJMP _0x2060047
                 _0x2060048:
000752 1715      	CP   R17,R21
000753 f478      	BRSH _0x206004A
000754 ff07      	SBRS R16,7
000755 c008      	RJMP _0x206004B
000756 ff02      	SBRS R16,2
000757 c004      	RJMP _0x206004C
000758 7f0b      	ANDI R16,LOW(251)
000759 2f24      	MOV  R18,R20
00075a 5011      	SUBI R17,LOW(1)
00075b c001      	RJMP _0x206004D
                 _0x206004C:
00075c e320      	LDI  R18,LOW(48)
                 _0x206004D:
00075d c001      	RJMP _0x206004E
                 _0x206004B:
00075e e220      	LDI  R18,LOW(32)
                 _0x206004E:
00075f 940e 0925 	CALL SUBOPT_0x10
000761 5051      	SUBI R21,LOW(1)
000762 cfef      	RJMP _0x2060048
                 _0x206004A:
                 _0x2060047:
000763 2f31      	MOV  R19,R17
000764 ff01      	SBRS R16,1
000765 c017      	RJMP _0x206004F
                 _0x2060050:
000766 3030      	CPI  R19,0
000767 f0a1      	BREQ _0x2060052
000768 ff03      	SBRS R16,3
000769 c006      	RJMP _0x2060053
00076a 81ee      	LDD  R30,Y+6
00076b 81ff      	LDD  R31,Y+6+1
00076c 9125      	LPM  R18,Z+
00076d 83ee      	STD  Y+6,R30
00076e 83ff      	STD  Y+6+1,R31
00076f c005      	RJMP _0x2060054
                 _0x2060053:
000770 81ae      	LDD  R26,Y+6
000771 81bf      	LDD  R27,Y+6+1
000772 912d      	LD   R18,X+
000773 83ae      	STD  Y+6,R26
000774 83bf      	STD  Y+6+1,R27
                 _0x2060054:
000775 940e 0925 	CALL SUBOPT_0x10
000777 3050      	CPI  R21,0
000778 f009      	BREQ _0x2060055
000779 5051      	SUBI R21,LOW(1)
                 _0x2060055:
00077a 5031      	SUBI R19,LOW(1)
00077b cfea      	RJMP _0x2060050
                 _0x2060052:
00077c c04b      	RJMP _0x2060056
                 _0x206004F:
                 _0x2060058:
00077d e320      	LDI  R18,LOW(48)
00077e 81ee      	LDD  R30,Y+6
00077f 81ff      	LDD  R31,Y+6+1
000780 940e 097f 	CALL __GETW1PF
000782 87e8      	STD  Y+8,R30
000783 87f9      	STD  Y+8+1,R31
000784 81ee      	LDD  R30,Y+6
000785 81ff      	LDD  R31,Y+6+1
000786 9632      	ADIW R30,2
000787 83ee      	STD  Y+6,R30
000788 83ff      	STD  Y+6+1,R31
                 _0x206005A:
000789 85e8      	LDD  R30,Y+8
00078a 85f9      	LDD  R31,Y+8+1
00078b 85aa      	LDD  R26,Y+10
00078c 85bb      	LDD  R27,Y+10+1
00078d 17ae      	CP   R26,R30
00078e 07bf      	CPC  R27,R31
00078f f050      	BRLO _0x206005C
000790 5f2f      	SUBI R18,-LOW(1)
000791 85a8      	LDD  R26,Y+8
000792 85b9      	LDD  R27,Y+8+1
000793 85ea      	LDD  R30,Y+10
000794 85fb      	LDD  R31,Y+10+1
000795 1bea      	SUB  R30,R26
000796 0bfb      	SBC  R31,R27
000797 87ea      	STD  Y+10,R30
000798 87fb      	STD  Y+10+1,R31
000799 cfef      	RJMP _0x206005A
                 _0x206005C:
00079a 332a      	CPI  R18,58
00079b f028      	BRLO _0x206005D
00079c ff03      	SBRS R16,3
00079d c002      	RJMP _0x206005E
00079e 5f29      	SUBI R18,-LOW(7)
00079f c001      	RJMP _0x206005F
                 _0x206005E:
0007a0 5d29      	SUBI R18,-LOW(39)
                 _0x206005F:
                 _0x206005D:
0007a1 fd04      	SBRC R16,4
0007a2 c01a      	RJMP _0x2060061
0007a3 3321      	CPI  R18,49
0007a4 f420      	BRSH _0x2060063
0007a5 85a8      	LDD  R26,Y+8
0007a6 85b9      	LDD  R27,Y+8+1
0007a7 9711      	SBIW R26,1
0007a8 f409      	BRNE _0x2060062
                 _0x2060063:
0007a9 c009      	RJMP _0x20600CD
                 _0x2060062:
0007aa 1753      	CP   R21,R19
0007ab f010      	BRLO _0x2060067
0007ac ff00      	SBRS R16,0
0007ad c001      	RJMP _0x2060068
                 _0x2060067:
0007ae c013      	RJMP _0x2060066
                 _0x2060068:
0007af e220      	LDI  R18,LOW(32)
0007b0 ff07      	SBRS R16,7
0007b1 c00b      	RJMP _0x2060069
0007b2 e320      	LDI  R18,LOW(48)
                 _0x20600CD:
0007b3 6100      	ORI  R16,LOW(16)
0007b4 ff02      	SBRS R16,2
0007b5 c007      	RJMP _0x206006A
0007b6 7f0b      	ANDI R16,LOW(251)
0007b7 934a      	ST   -Y,R20
0007b8 940e 0932 	CALL SUBOPT_0x12
0007ba 3050      	CPI  R21,0
0007bb f009      	BREQ _0x206006B
0007bc 5051      	SUBI R21,LOW(1)
                 _0x206006B:
                 _0x206006A:
                 _0x2060069:
                 _0x2060061:
0007bd 940e 0925 	CALL SUBOPT_0x10
0007bf 3050      	CPI  R21,0
0007c0 f009      	BREQ _0x206006C
0007c1 5051      	SUBI R21,LOW(1)
                 _0x206006C:
                 _0x2060066:
0007c2 5031      	SUBI R19,LOW(1)
0007c3 85a8      	LDD  R26,Y+8
0007c4 85b9      	LDD  R27,Y+8+1
0007c5 9712      	SBIW R26,2
0007c6 f008      	BRLO _0x2060059
0007c7 cfb5      	RJMP _0x2060058
                 _0x2060059:
                 _0x2060056:
0007c8 ff00      	SBRS R16,0
0007c9 c008      	RJMP _0x206006D
                 _0x206006E:
0007ca 3050      	CPI  R21,0
0007cb f031      	BREQ _0x2060070
0007cc 5051      	SUBI R21,LOW(1)
0007cd e2e0      	LDI  R30,LOW(32)
0007ce 93ea      	ST   -Y,R30
0007cf 940e 0932 	CALL SUBOPT_0x12
0007d1 cff8      	RJMP _0x206006E
                 _0x2060070:
                 _0x206006D:
                 _0x2060071:
                 _0x2060030:
                 _0x20600CC:
0007d2 e010      	LDI  R17,LOW(0)
                 _0x206001B:
0007d3 cee0      	RJMP _0x2060016
                 _0x2060018:
0007d4 85ac      	LDD  R26,Y+12
0007d5 85bd      	LDD  R27,Y+12+1
0007d6 940e 097b 	CALL __GETW1P
0007d8 940e 09b0 	CALL __LOADLOCR6
0007da 9664      	ADIW R28,20
0007db 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007dc 92ff      	PUSH R15
0007dd 2ef8      	MOV  R15,R24
0007de 9726      	SBIW R28,6
0007df 940e 09ab 	CALL __SAVELOCR4
0007e1 940e 094a 	CALL SUBOPT_0x15
0007e3 9730      	SBIW R30,0
0007e4 f419      	BRNE _0x2060072
0007e5 efef      	LDI  R30,LOW(65535)
0007e6 efff      	LDI  R31,HIGH(65535)
0007e7 c023      	RJMP _0x2120005
                 _0x2060072:
0007e8 01de      	MOVW R26,R28
0007e9 9616      	ADIW R26,6
0007ea 940e 095b 	CALL __ADDW2R15
0007ec 018d      	MOVW R16,R26
0007ed 940e 094a 	CALL SUBOPT_0x15
0007ef 83ee      	STD  Y+6,R30
0007f0 83ff      	STD  Y+6+1,R31
0007f1 e0e0      	LDI  R30,LOW(0)
0007f2 87e8      	STD  Y+8,R30
0007f3 87e9      	STD  Y+8+1,R30
0007f4 01de      	MOVW R26,R28
0007f5 961a      	ADIW R26,10
0007f6 940e 095b 	CALL __ADDW2R15
0007f8 940e 097b 	CALL __GETW1P
0007fa 93fa      	ST   -Y,R31
0007fb 93ea      	ST   -Y,R30
0007fc 931a      	ST   -Y,R17
0007fd 930a      	ST   -Y,R16
0007fe e6e9      	LDI  R30,LOW(_put_buff_G103)
0007ff e0f6      	LDI  R31,HIGH(_put_buff_G103)
000800 93fa      	ST   -Y,R31
000801 93ea      	ST   -Y,R30
000802 01de      	MOVW R26,R28
000803 961a      	ADIW R26,10
000804 dea3      	RCALL __print_G103
000805 019f      	MOVW R18,R30
000806 81ae      	LDD  R26,Y+6
000807 81bf      	LDD  R27,Y+6+1
000808 e0e0      	LDI  R30,LOW(0)
000809 93ec      	ST   X,R30
00080a 01f9      	MOVW R30,R18
                 _0x2120005:
00080b 940e 09b2 	CALL __LOADLOCR4
00080d 962a      	ADIW R28,10
00080e 90ff      	POP  R15
00080f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000810 93ba      	ST   -Y,R27
000811 93aa      	ST   -Y,R26
000812 81b9          ldd  r27,y+1
000813 81a8          ld   r26,y
000814 9610          adiw r26,0
000815 f031          breq memset1
000816 81fc          ldd  r31,y+4
000817 81eb          ldd  r30,y+3
000818 816a          ldd  r22,y+2
                 memset0:
000819 9361          st   z+,r22
00081a 9711          sbiw r26,1
00081b f7e9          brne memset0
                 memset1:
00081c 81eb          ldd  r30,y+3
00081d 81fc          ldd  r31,y+4
                 _0x2120004:
00081e 9625      	ADIW R28,5
00081f 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000820 93ba      	ST   -Y,R27
000821 93aa      	ST   -Y,R26
000822 91a9          ld   r26,y+
000823 91b9          ld   r27,y+
000824 27ee          clr  r30
000825 27ff          clr  r31
                 strlen0:
000826 916d          ld   r22,x+
000827 2366          tst  r22
000828 f011          breq strlen1
000829 9631          adiw r30,1
00082a cffb          rjmp strlen0
                 strlen1:
00082b 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00082c 93ba      	ST   -Y,R27
00082d 93aa      	ST   -Y,R26
00082e 27aa          clr  r26
00082f 27bb          clr  r27
000830 91e9          ld   r30,y+
000831 91f9          ld   r31,y+
                 strlenf0:
000832 9005      	lpm  r0,z+
000833 2000          tst  r0
000834 f011          breq strlenf1
000835 9611          adiw r26,1
000836 cffb          rjmp strlenf0
                 strlenf1:
000837 01fd          movw r30,r26
000838 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000839 93aa      	ST   -Y,R26
00083a 81e8      	LD   R30,Y
00083b e0f0      	LDI  R31,0
00083c 59e0      	SUBI R30,LOW(-__glcd_mask*2)
00083d 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00083e 91a4      	LPM  R26,Z
00083f 81e9      	LDD  R30,Y+1
000840 940e 0963 	CALL __LSLB12
                 _0x2120003:
000842 9622      	ADIW R28,2
000843 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000844 93aa      	ST   -Y,R26
000845 931a      	ST   -Y,R17
000846 81e9      	LDD  R30,Y+1
000847 30e7      	CPI  R30,LOW(0x7)
000848 f011      	BREQ _0x20A0007
000849 30ea      	CPI  R30,LOW(0xA)
00084a f419      	BRNE _0x20A0008
                 _0x20A0007:
00084b 9110 0500 	LDS  R17,_glcd_state
00084d c009      	RJMP _0x20A0009
                 _0x20A0008:
00084e 30e9      	CPI  R30,LOW(0x9)
00084f f419      	BRNE _0x20A000B
                +
000850 9110 0501+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000852 c004      	RJMP _0x20A0009
                 _0x20A000B:
000853 30e8      	CPI  R30,LOW(0x8)
000854 f4a1      	BRNE _0x20A0005
                +
000855 9110 0510+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20A0009:
                +
000857 91e0 0501+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000859 30e0      	CPI  R30,0
00085a f049      	BREQ _0x20A000E
00085b 3010      	CPI  R17,0
00085c f019      	BREQ _0x20A000F
00085d efef      	LDI  R30,LOW(255)
00085e 8118      	LDD  R17,Y+0
00085f c029      	RJMP _0x2120002
                 _0x20A000F:
000860 81ea      	LDD  R30,Y+2
000861 95e0      	COM  R30
000862 8118      	LDD  R17,Y+0
000863 c025      	RJMP _0x2120002
                 _0x20A000E:
000864 3010      	CPI  R17,0
000865 f419      	BRNE _0x20A0011
000866 e0e0      	LDI  R30,LOW(0)
000867 8118      	LDD  R17,Y+0
000868 c020      	RJMP _0x2120002
                 _0x20A0011:
                 _0x20A0005:
000869 81ea      	LDD  R30,Y+2
00086a 8118      	LDD  R17,Y+0
00086b c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
00086c 93ba      	ST   -Y,R27
00086d 93aa      	ST   -Y,R26
00086e 81ea      	LDD  R30,Y+2
00086f 30e1      	CPI  R30,LOW(0x1)
000870 f421      	BRNE _0x20A0015
000871 81e8      	LD   R30,Y
000872 81f9      	LDD  R31,Y+1
000873 91e4      	LPM  R30,Z
000874 c014      	RJMP _0x2120002
                 _0x20A0015:
000875 30e2      	CPI  R30,LOW(0x2)
000876 f429      	BRNE _0x20A0016
000877 81a8      	LD   R26,Y
000878 81b9      	LDD  R27,Y+1
000879 940e 0988 	CALL __EEPROMRDB
00087b c00d      	RJMP _0x2120002
                 _0x20A0016:
00087c 30e3      	CPI  R30,LOW(0x3)
00087d f441      	BRNE _0x20A0018
00087e 81a8      	LD   R26,Y
00087f 81b9      	LDD  R27,Y+1
                +
000880 91e0 0519+LDS R30 , _glcd_state + ( 25 )
000882 91f0 051a+LDS R31 , _glcd_state + ( 25 ) + 1
000884 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000885 c003      	RJMP _0x2120002
                 _0x20A0018:
000886 81a8      	LD   R26,Y
000887 81b9      	LDD  R27,Y+1
000888 91ec      	LD   R30,X
                 _0x2120002:
000889 9623      	ADIW R28,3
00088a 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00088b 93aa      	ST   -Y,R26
00088c 81eb      	LDD  R30,Y+3
00088d 30e0      	CPI  R30,0
00088e f429      	BRNE _0x20A001C
00088f 81e8      	LD   R30,Y
000890 81a9      	LDD  R26,Y+1
000891 81ba      	LDD  R27,Y+1+1
000892 93ec      	ST   X,R30
000893 c014      	RJMP _0x20A001B
                 _0x20A001C:
000894 30e2      	CPI  R30,LOW(0x2)
000895 f431      	BRNE _0x20A001D
000896 81e8      	LD   R30,Y
000897 81a9      	LDD  R26,Y+1
000898 81ba      	LDD  R27,Y+1+1
000899 940e 0994 	CALL __EEPROMWRB
00089b c00c      	RJMP _0x20A001B
                 _0x20A001D:
00089c 30e3      	CPI  R30,LOW(0x3)
00089d f451      	BRNE _0x20A001B
00089e 81e9      	LDD  R30,Y+1
00089f 81fa      	LDD  R31,Y+1+1
0008a0 93fa      	ST   -Y,R31
0008a1 93ea      	ST   -Y,R30
0008a2 81aa      	LDD  R26,Y+2
                +
0008a3 91e0 051b+LDS R30 , _glcd_state + ( 27 )
0008a5 91f0 051c+LDS R31 , _glcd_state + ( 27 ) + 1
0008a7 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20A001B:
                 _0x2120001:
0008a8 9624      	ADIW R28,4
0008a9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000500           	.BYTE 0x1D
                 _buffer:
00051d           	.BYTE 0xA
                 _gfx_addr_G100:
000527           	.BYTE 0x2
                 _gfx_buffer_G100:
000529           	.BYTE 0x1F8
                 __seed_G108:
000721           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
0008aa e2a7      	LDI  R26,LOW(_gfx_addr_G100)
0008ab e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008ac 91ed      	LD   R30,X+
0008ad 91fd      	LD   R31,X+
0008ae 9631      	ADIW R30,1
0008af 93fe      	ST   -X,R31
0008b0 93ee      	ST   -X,R30
0008b1 9731      	SBIW R30,1
0008b2 5de7      	SUBI R30,LOW(-_gfx_buffer_G100)
0008b3 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0008b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0008b5 93e0 0064 	STS  100,R30
0008b7 91e0 0065 	LDS  R30,101
0008b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0008ba 0fea      	ADD  R30,R26
0008bb 1ffb      	ADC  R31,R27
0008bc 83ee      	STD  Y+6,R30
0008bd 83ff      	STD  Y+6+1,R31
0008be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
0008bf 85ec      	LDD  R30,Y+12
0008c0 93ea      	ST   -Y,R30
0008c1 81ef      	LDD  R30,Y+7
0008c2 85f8      	LDD  R31,Y+7+1
0008c3 9631      	ADIW R30,1
0008c4 83ef      	STD  Y+7,R30
0008c5 87f8      	STD  Y+7+1,R31
0008c6 9731      	SBIW R30,1
0008c7 93fa      	ST   -Y,R31
0008c8 93ea      	ST   -Y,R30
0008c9 e0a0      	LDI  R26,LOW(0)
0008ca 940c 088b 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0008cc 930a      	ST   -Y,R16
0008cd 89a8      	LDD  R26,Y+16
0008ce 940c 0222 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
0008d0 85ec      	LDD  R30,Y+12
0008d1 93ea      	ST   -Y,R30
0008d2 81ef      	LDD  R30,Y+7
0008d3 85f8      	LDD  R31,Y+7+1
0008d4 9631      	ADIW R30,1
0008d5 83ef      	STD  Y+7,R30
0008d6 87f8      	STD  Y+7+1,R31
0008d7 9731      	SBIW R30,1
0008d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0008d9 2766      	CLR  R22
0008da 2777      	CLR  R23
0008db 01df      	MOVW R26,R30
0008dc 01cb      	MOVW R24,R22
0008dd 940c 086c 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0008df 935a      	ST   -Y,R21
0008e0 85aa      	LDD  R26,Y+10
0008e1 940c 0844 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
0008e3 930a      	ST   -Y,R16
0008e4 9503      	INC  R16
0008e5 89e8      	LDD  R30,Y+16
0008e6 93ea      	ST   -Y,R30
0008e7 935a      	ST   -Y,R21
0008e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
0008e9 2f5e      	MOV  R21,R30
0008ea 85ec      	LDD  R30,Y+12
0008eb 93ea      	ST   -Y,R30
0008ec 81af      	LDD  R26,Y+7
0008ed 85b8      	LDD  R27,Y+7+1
0008ee 2788      	CLR  R24
0008ef 2799      	CLR  R25
0008f0 940e 086c 	CALL _glcd_readmem
0008f2 2e1e      	MOV  R1,R30
0008f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA:
0008f4 930a      	ST   -Y,R16
0008f5 9503      	INC  R16
0008f6 89e8      	LDD  R30,Y+16
0008f7 93ea      	ST   -Y,R30
0008f8 85ee      	LDD  R30,Y+14
0008f9 93ea      	ST   -Y,R30
0008fa 85e9      	LDD  R30,Y+9
0008fb 85fa      	LDD  R31,Y+9+1
0008fc 9631      	ADIW R30,1
0008fd 87e9      	STD  Y+9,R30
0008fe 87fa      	STD  Y+9+1,R31
0008ff 9731      	SBIW R30,1
000900 cfd8      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000901 93ba      	ST   -Y,R27
000902 93aa      	ST   -Y,R26
000903 81a8      	LD   R26,Y
000904 81b9      	LDD  R27,Y+1
000905 940e 09a5 	CALL __CPW02
000907 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000908 940e 09a9 	CALL __SAVELOCR6
                +
00090a 91e0 0504+LDS R30 , _glcd_state + ( 4 )
00090c 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00090e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00090f 01f8      	MOVW R30,R16
                +
000910 5f0f     +SUBI R16 , LOW ( - 1 )
000911 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000912 9004      	LPM  R0,Z
000913 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
000914 91e0 0504+LDS R30 , _glcd_state + ( 4 )
000916 91f0 0505+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000918 9631      	ADIW R30,1
000919 91e4      	LPM  R30,Z
00091a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
00091b 93ea      	ST   -Y,R30
00091c e0e0      	LDI  R30,LOW(0)
00091d 93ea      	ST   -Y,R30
00091e e0e0      	LDI  R30,LOW(0)
00091f e0f0      	LDI  R31,HIGH(0)
000920 93fa      	ST   -Y,R31
000921 93ea      	ST   -Y,R30
000922 e0a9      	LDI  R26,LOW(9)
000923 940c 0359 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
000925 932a      	ST   -Y,R18
000926 85ad      	LDD  R26,Y+13
000927 85be      	LDD  R27,Y+13+1
000928 85ef      	LDD  R30,Y+15
000929 89f8      	LDD  R31,Y+15+1
00092a 9509      	ICALL
00092b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
00092c 89e8      	LDD  R30,Y+16
00092d 89f9      	LDD  R31,Y+16+1
00092e 9734      	SBIW R30,4
00092f 8be8      	STD  Y+16,R30
000930 8bf9      	STD  Y+16+1,R31
000931 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000932 85ad      	LDD  R26,Y+13
000933 85be      	LDD  R27,Y+13+1
000934 85ef      	LDD  R30,Y+15
000935 89f8      	LDD  R31,Y+15+1
000936 9509      	ICALL
000937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
000938 89a8      	LDD  R26,Y+16
000939 89b9      	LDD  R27,Y+16+1
00093a 9614      	ADIW R26,4
00093b 940e 097b 	CALL __GETW1P
00093d 83ee      	STD  Y+6,R30
00093e 83ff      	STD  Y+6+1,R31
00093f 81ae      	LDD  R26,Y+6
000940 81bf      	LDD  R27,Y+6+1
000941 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
000942 89a8      	LDD  R26,Y+16
000943 89b9      	LDD  R27,Y+16+1
000944 9614      	ADIW R26,4
000945 940e 097b 	CALL __GETW1P
000947 87ea      	STD  Y+10,R30
000948 87fb      	STD  Y+10+1,R31
000949 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
00094a 01de      	MOVW R26,R28
00094b 961c      	ADIW R26,12
00094c 940e 095b 	CALL __ADDW2R15
00094e 940e 097b 	CALL __GETW1P
000950 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000951 9610      	adiw r26,0
000952 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000953 ed80     +LDI R24 , LOW ( 0x7D0 )
000954 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000955 9701     +SBIW R24 , 1
000956 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000957 95a8      	wdr
000958 9711      	sbiw r26,1
000959 f7c9      	brne __delay_ms0
                 __delay_ms1:
00095a 9508      	ret
                 
                 __ADDW2R15:
00095b 2400      	CLR  R0
00095c 0daf      	ADD  R26,R15
00095d 1db0      	ADC  R27,R0
00095e 9508      	RET
                 
                 __ANEGW1:
00095f 95f1      	NEG  R31
000960 95e1      	NEG  R30
000961 40f0      	SBCI R31,0
000962 9508      	RET
                 
                 __LSLB12:
000963 23ee      	TST  R30
000964 2e0e      	MOV  R0,R30
000965 2fea      	MOV  R30,R26
000966 f019      	BREQ __LSLB12R
                 __LSLB12L:
000967 0fee      	LSL  R30
000968 940a      	DEC  R0
000969 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00096a 9508      	RET
                 
                 __LSRB12:
00096b 23ee      	TST  R30
00096c 2e0e      	MOV  R0,R30
00096d 2fea      	MOV  R30,R26
00096e f019      	BREQ __LSRB12R
                 __LSRB12L:
00096f 95e6      	LSR  R30
000970 940a      	DEC  R0
000971 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000972 9508      	RET
                 
                 __MULW12U:
000973 9ffa      	MUL  R31,R26
000974 2df0      	MOV  R31,R0
000975 9feb      	MUL  R30,R27
000976 0df0      	ADD  R31,R0
000977 9fea      	MUL  R30,R26
000978 2de0      	MOV  R30,R0
000979 0df1      	ADD  R31,R1
00097a 9508      	RET
                 
                 __GETW1P:
00097b 91ed      	LD   R30,X+
00097c 91fc      	LD   R31,X
00097d 9711      	SBIW R26,1
00097e 9508      	RET
                 
                 __GETW1PF:
00097f 9005      	LPM  R0,Z+
000980 91f4      	LPM  R31,Z
000981 2de0      	MOV  R30,R0
000982 9508      	RET
                 
                 __PUTPARD1:
000983 937a      	ST   -Y,R23
000984 936a      	ST   -Y,R22
000985 93fa      	ST   -Y,R31
000986 93ea      	ST   -Y,R30
000987 9508      	RET
                 
                 __EEPROMRDB:
000988 99e1      	SBIC EECR,EEWE
000989 cffe      	RJMP __EEPROMRDB
00098a 93ff      	PUSH R31
00098b b7ff      	IN   R31,SREG
00098c 94f8      	CLI
00098d bbae      	OUT  EEARL,R26
00098e bbbf      	OUT  EEARH,R27
00098f 9ae0      	SBI  EECR,EERE
000990 b3ed      	IN   R30,EEDR
000991 bfff      	OUT  SREG,R31
000992 91ff      	POP  R31
000993 9508      	RET
                 
                 __EEPROMWRB:
000994 9be1      	SBIS EECR,EEWE
000995 c002      	RJMP __EEPROMWRB1
000996 95a8      	WDR
000997 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000998 b79f      	IN   R25,SREG
000999 94f8      	CLI
00099a bbae      	OUT  EEARL,R26
00099b bbbf      	OUT  EEARH,R27
00099c 9ae0      	SBI  EECR,EERE
00099d b38d      	IN   R24,EEDR
00099e 17e8      	CP   R30,R24
00099f f019      	BREQ __EEPROMWRB0
0009a0 bbed      	OUT  EEDR,R30
0009a1 9ae2      	SBI  EECR,EEMWE
0009a2 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009a3 bf9f      	OUT  SREG,R25
0009a4 9508      	RET
                 
                 __CPW02:
0009a5 2400      	CLR  R0
0009a6 160a      	CP   R0,R26
0009a7 060b      	CPC  R0,R27
0009a8 9508      	RET
                 
                 __SAVELOCR6:
0009a9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009aa 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009ab 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009ac 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009ad 931a      	ST   -Y,R17
0009ae 930a      	ST   -Y,R16
0009af 9508      	RET
                 
                 __LOADLOCR6:
0009b0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009b1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009b2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009b3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009b4 8119      	LDD  R17,Y+1
0009b5 8108      	LD   R16,Y
0009b6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  28 r1 :   5 r2 :   0 r3 :   0 r4 :   3 r5 :   1 r6 :   4 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  69 r17:  87 r18:  53 r19:  34 r20:  25 r21:  47 r22:  10 r23:   3 
r24:  18 r25:   6 r26: 269 r27:  87 r28:  27 r29:   1 r30: 663 r31: 158 
x  :  31 y  : 464 z  :  31 
Registers used: 26 out of 35 (74.3%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  20 
adiw  :  41 and   :   8 andi  :  21 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  40 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   4 brmi  :   1 brne  :  74 brpl  :   1 brsh  :  19 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 120 
cbi   :   2 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   7 
cp    :  23 cpc   :  10 cpi   :  92 cpse  :   0 dec   :   4 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   6 inc   :   2 jmp   :  50 ld    :  40 ldd   : 252 
ldi   : 176 lds   :  44 lpm   :  30 lsl   :   2 lsr   :  15 mov   :  87 
movw  :  36 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   5 ori   :  25 out   :  19 pop   :  12 push  :  12 rcall :  42 
ret   :  47 reti  :   0 rjmp  : 140 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   9 sbi   :   8 sbic  :   1 sbis  :   2 sbiw  :  33 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 148 std   :  66 sts   :  39 sub   :   7 subi  :  41 
swap  :   0 tst   :   6 wdr   :   2 
Instructions used: 60 out of 117 (51.3%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00136e   4428    546   4974  131072   3.8%
[.dseg] 0x000100 0x000725      0    549    549    4096  13.4%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
